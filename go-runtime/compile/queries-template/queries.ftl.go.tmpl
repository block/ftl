{{- with .QueriesCtx -}}
{{- $module := .Module -}}

// Code generated by FTL. DO NOT EDIT.
package {{$module.Name}}

{{ if .Imports -}}
import (
{{- range .Imports }}
    {{.}}
{{- end }}
)
{{ end }}

{{- range .Decls -}}
{{- if is "Data" . }}

type {{.Name|title}}
	{{- if .TypeParameters}}[
		{{- range $i, $tp := .TypeParameters}}
			{{- if $i}}, {{end}}{{$tp}} any
		{{- end -}}
	]{{- end}} struct {
  {{- range .Fields}}
  	{{.Name|title}} {{type $module .Type}}
  {{- end}}
}
{{- else if is "Verb" . }}
{{ if and (eq (type $module .Request) "ftl.Unit") (eq (type $module .Response) "ftl.Unit")}}
type {{.Name|title}}Client func(context.Context) error
{{- else if eq (type $module .Request) "ftl.Unit"}}
type {{.Name|title}}Client func(context.Context) ({{type $module .Response}}, error)
{{- else if eq (type $module .Response) "ftl.Unit"}}
type {{.Name|title}}Client func(context.Context, {{type $module .Request}}) error
{{- else}}
type {{.Name|title}}Client func(context.Context, {{type $module .Request}}) ({{type $module .Response}}, error)
{{- end}}
{{- end}}
{{- end}}

{{- end -}}
