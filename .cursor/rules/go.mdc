---
description: Rules for writing Go code
globs: **/*.go
alwaysApply: false
---

These rules for writing Go code (*.go):

- Always handle errors using `github.com/alecthomas/errors`.
- Never use `fmt.Errorf()` or stdlib `errors.New()`
- Use `errors.Errorf("%w: message", err)` for basic error wrapping
- Use `errors.Errorf("%w: message with %s", err, formatString)` for wrapping with formatting
- Use `errors.Errorf("message with %v", value)` for creating new errors
- Never use pointers to represent optional values, always use `github.com/alecthomas/types/optional.Option[T]`
- For tests, always use `github.com/alecthomas/assert/v2` for assertions.
- When using `assert.Equal`, the parameters are `assert.Equal(t, <expected>, <actual>)` in that order.
- Always update or create tests for new changes to Go code.
- After making changes to Go files, always run tests.
- Never use `os.Getenv()` outside of `main()`
