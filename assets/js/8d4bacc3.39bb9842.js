"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[523],{267:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>d,metadata:()=>l,toc:()=>h});const l=JSON.parse('{"id":"reference/types","title":"Types","description":"Declaring and using Types","source":"@site/docs/reference/types.md","sourceDirName":"reference","slug":"/reference/types","permalink":"/ftl/docs/reference/types","draft":false,"unlisted":false,"editUrl":"https://github.com/block/ftl/tree/main/docs/docs/reference/types.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Types","description":"Declaring and using Types"},"sidebar":"tutorialSidebar","previous":{"title":"Verbs","permalink":"/ftl/docs/reference/verbs"},"next":{"title":"Visibility","permalink":"/ftl/docs/reference/visibility"}}');var s=t(7968),r=t(991),i=t(1986),a=t(8033);const d={sidebar_position:2,title:"Types",description:"Declaring and using Types"},c="Types",o={},h=[{value:"Basic types",id:"basic-types",level:2},{value:"Data structures",id:"data-structures",level:2},{value:"Generics",id:"generics",level:2},{value:"Type enums (sum types)",id:"type-enums-sum-types",level:2},{value:"Value enums",id:"value-enums",level:2},{value:"Type aliases",id:"type-aliases",level:2}];function x(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"types",children:"Types"})}),"\n",(0,s.jsxs)(n.p,{children:["FTL supports the following types: ",(0,s.jsx)(n.code,{children:"Int"})," (64-bit), ",(0,s.jsx)(n.code,{children:"Float"})," (64-bit), ",(0,s.jsx)(n.code,{children:"String"}),", ",(0,s.jsx)(n.code,{children:"Bytes"})," (a byte array), ",(0,s.jsx)(n.code,{children:"Bool"}),", ",(0,s.jsx)(n.code,{children:"Time"}),",\n",(0,s.jsx)(n.code,{children:"Any"})," (a dynamic type), ",(0,s.jsx)(n.code,{children:"Unit"}),' (similar to "void"), arrays, maps, data structures, and constant enumerations. Each FTL\ntype is mapped to a corresponding language-specific type. For example in Go ',(0,s.jsx)(n.code,{children:"Float"})," is represented as ",(0,s.jsx)(n.code,{children:"float64"}),", ",(0,s.jsx)(n.code,{children:"Time"}),"\nis represented by ",(0,s.jsx)(n.code,{children:"time.Time"}),", and so on."]}),"\n",(0,s.jsx)(n.p,{children:"User-defined types referenced by a verb will be automatically exported as FTL types."}),"\n","\n",(0,s.jsx)(n.h2,{id:"basic-types",children:"Basic types"}),"\n",(0,s.jsx)(n.p,{children:"The following table shows how FTL types map to language-specific types:"}),"\n",(0,s.jsxs)(i.A,{groupId:"languages",children:[(0,s.jsx)(a.A,{value:"go",label:"Go",default:!0,children:(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"FTL"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Go"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Int"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"int"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Float"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"float64"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"String"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Bytes"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"[]byte"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Bool"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"bool"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Time"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"time.Time"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Any"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.a,{href:"./externaltypes",children:"External"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Unit"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"N/A"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Map<K,V>"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"map[K]V"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Array<T>"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"[]T"})})]})]})]})}),(0,s.jsx)(a.A,{value:"kotlin",label:"Kotlin",children:(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"FTL"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Kotlin"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Int"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Long"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Float"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Double"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"String"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"String"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Bytes"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"ByteArray"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Bool"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Boolean"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Time"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"ZonedDateTime"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Any"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.a,{href:"./externaltypes",children:"External"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Unit"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Unit"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Map<K,V>"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Map<K,V>"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Array<T>"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"List<T>"})})]})]})]})}),(0,s.jsx)(a.A,{value:"java",label:"Java",children:(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"FTL"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Java"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Java (optional)"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Int"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"long"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Long"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Float"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"double"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Double"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"String"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"String"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"@Nullable String"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Bytes"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"[]byte"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"@Nullable byte[]"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Bool"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Boolean"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Time"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"ZonedDateTime\ufe0f"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"@Nullable ZonedDateTime"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Any"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.a,{href:"./externaltypes",children:"External"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.a,{href:"./externaltypes",children:"External"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Unit"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"void"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"N/A"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Map<K,V>"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Map<K,V>"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"@Nullable Map<K,V>"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Array<T>"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"List<T>"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"@Nullable List<T>"})})]})]})]})}),(0,s.jsxs)(a.A,{value:"schema",label:"Schema",children:[(0,s.jsx)(n.p,{children:"In the FTL schema, these are the primitive types that can be used directly:"}),(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"FTL Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Int"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"64-bit signed integer"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Float"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"64-bit floating point number"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"String"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"UTF-8 encoded string"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Bytes"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Byte array"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Bool"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Boolean value (true/false)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Time"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"RFC3339 formatted timestamp"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Any"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Dynamic type (schema-less)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Unit"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Empty type (similar to void)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Map<K,V>"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Key-value mapping"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"[T]"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Array of type T"})]})]})]}),(0,s.jsx)(n.p,{children:"Example usage in schema:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-schema",children:"module example {\n  data Person {\n    name String\n    age Int\n    height Float\n    isActive Bool\n    birthdate Time\n    metadata Map<String, Any>\n    tags [String]\n  }\n}\n"})})]})]}),"\n",(0,s.jsx)(n.h2,{id:"data-structures",children:"Data structures"}),"\n",(0,s.jsx)(n.p,{children:"FTL supports user-defined data structures, declared using the idiomatic syntax of the target language."}),"\n",(0,s.jsxs)(i.A,{groupId:"languages",children:[(0,s.jsx)(a.A,{value:"go",label:"Go",default:!0,children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"type Person struct {\n  Name string\n  Age  int\n}\n"})})}),(0,s.jsx)(a.A,{value:"kotlin",label:"Kotlin",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:"data class Person(\n  val name: String,\n  val age: Int\n)\n"})})}),(0,s.jsx)(a.A,{value:"java",label:"Java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"public class Person {\n  private final String name;\n  private final int age;\n\n  public Person(String name, int age) {\n    this.name = name;\n    this.age = age;\n  }\n}\n"})})}),(0,s.jsxs)(a.A,{value:"schema",label:"Schema",children:[(0,s.jsxs)(n.p,{children:["In the FTL schema, data structures are defined using the ",(0,s.jsx)(n.code,{children:"data"})," keyword:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-schema",children:"module example {\n  data Person {\n    name String\n    age Int\n  }\n}\n"})}),(0,s.jsxs)(n.p,{children:["Fields can have optional values by adding a ",(0,s.jsx)(n.code,{children:"?"})," suffix:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-schema",children:"module example {\n  data Person {\n    name String\n    age Int\n    address String?\n  }\n}\n"})})]})]}),"\n",(0,s.jsx)(n.h2,{id:"generics",children:"Generics"}),"\n",(0,s.jsx)(n.p,{children:"FTL has first-class support for generics, declared using the idiomatic syntax of the target language."}),"\n",(0,s.jsxs)(i.A,{groupId:"languages",children:[(0,s.jsx)(a.A,{value:"go",label:"Go",default:!0,children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"type Pair[T, U] struct {\n  First  T\n  Second U\n}\n"})})}),(0,s.jsx)(a.A,{value:"kotlin",label:"Kotlin",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:"data class Pair<T, U>(\n  val first: T,\n  val second: U\n)\n"})})}),(0,s.jsx)(a.A,{value:"java",label:"Java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"public class Pair<T, U> {\n  private final T first;\n  private final U second;\n\n  public Pair(T first, U second) {\n    this.first = first;\n    this.second = second;\n  }\n}\n"})})}),(0,s.jsxs)(a.A,{value:"schema",label:"Schema",children:[(0,s.jsx)(n.p,{children:"In the FTL schema, generic types are defined with type parameters:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-schema",children:"module example {\n  data Pair<T, U> {\n    first T\n    second U\n  }\n}\n"})}),(0,s.jsx)(n.p,{children:"Generic types can be used in other type definitions:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-schema",children:"module example {\n  data Pair<T, U> {\n    first T\n    second U\n  }\n  \n  data StringIntPair {\n    pair example.Pair<String, Int>\n  }\n}\n"})})]})]}),"\n",(0,s.jsx)(n.h2,{id:"type-enums-sum-types",children:"Type enums (sum types)"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Tagged_union",children:"Sum types"})," are supported by FTL's type system."]}),"\n",(0,s.jsxs)(i.A,{groupId:"languages",children:[(0,s.jsxs)(a.A,{value:"go",label:"Go",default:!0,children:[(0,s.jsxs)(n.p,{children:["Sum types aren't directly supported by Go, however they can be approximated with the use of ",(0,s.jsx)(n.a,{href:"https://blog.chewxy.com/2018/03/18/golang-interfaces/",children:"sealed interfaces"}),":"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"//ftl:enum\ntype Animal interface { animal() }\n\ntype Cat struct {}\nfunc (Cat) animal() {}\n\ntype Dog struct {}\nfunc (Dog) animal() {}\n"})})]}),(0,s.jsxs)(a.A,{value:"kotlin",label:"Kotlin",children:[(0,s.jsxs)(n.p,{children:["Sum types aren't directly supported by Kotlin, however they can be approximated with the use of ",(0,s.jsx)(n.a,{href:"https://kotlinlang.org/docs/sealed-classes.html",children:"sealed interfaces"}),":"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:"import xyz.block.ftl.Enum\nimport xyz.block.ftl.EnumHolder\n\n@Enum\nsealed interface Animal\n\n@EnumHolder\nclass Cat() : Animal\n\n@EnumHolder\nclass Dog() : Animal\n"})})]}),(0,s.jsx)(a.A,{value:"java",label:"Java",children:(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"TODO"}),"\n"]})}),(0,s.jsxs)(a.A,{value:"schema",label:"Schema",children:[(0,s.jsx)(n.p,{children:"In the FTL schema, sum types (type enums) are represented as a union of types:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-schema",children:"module example {\n  data Cat {}\n  \n  data Dog {}\n  \n  enum Animal {\n    Cat example.Cat\n    Dog example.Dog\n  }\n}\n"})}),(0,s.jsx)(n.p,{children:"When used in other types or verbs, the sum type can be referenced directly:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-schema",children:"module example {\n  verb processAnimal(example.Animal) Unit\n}\n"})})]})]}),"\n",(0,s.jsx)(n.h2,{id:"value-enums",children:"Value enums"}),"\n",(0,s.jsx)(n.p,{children:"A value enum is an enumerated set of string or integer values."}),"\n",(0,s.jsxs)(i.A,{groupId:"languages",children:[(0,s.jsx)(a.A,{value:"go",label:"Go",default:!0,children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'//ftl:enum\ntype Colour string\n\nconst (\n  Red   Colour = "red"\n  Green Colour = "green"\n  Blue  Colour = "blue"\n)\n\n//ftl:enum\ntype Status int\n\nconst (\n  Active   Status = 1\n  Inactive Status = 0\n  Pending  Status = 2\n)\n'})})}),(0,s.jsx)(a.A,{value:"kotlin",label:"Kotlin",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:'import xyz.block.ftl.Enum\n\n@Enum\npublic enum class Colour(\n  public final val `value`: String,\n) {\n  Red("red"),\n  Green("green"),\n  Blue("blue"),\n  ;\n}\n\n@Enum\npublic enum class Status(\n  public final val `value`: Int,\n) {\n  Active(1),\n  Inactive(0),\n  Pending(2),\n  ;\n}\n'})})}),(0,s.jsx)(a.A,{value:"java",label:"Java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'import xyz.block.ftl.Enum;\n\n@Enum\npublic enum Colour {\n  Red("red"),\n  Green("green"),\n  Blue("blue");\n\n  private final String value;\n\n  Colour(String value) {\n    this.value = value;\n  }\n}\n\n@Enum\npublic enum Status {\n  Active(1),\n  Inactive(0),\n  Pending(2);\n\n  private final int value;\n\n  Status(int value) {\n    this.value = value;\n  }\n}\n'})})}),(0,s.jsxs)(a.A,{value:"schema",label:"Schema",children:[(0,s.jsx)(n.p,{children:"In the FTL schema, value enums are represented as an enum with string or integer values:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-schema",children:'module example {\n  enum Colour: String {\n    Red = "red"\n    Green = "green"\n    Blue = "blue"\n  }\n  \n  enum Status: Int {\n    Active = 1\n    Inactive = 0\n    Pending = 2\n  }\n}\n'})})]})]}),"\n",(0,s.jsx)(n.h2,{id:"type-aliases",children:"Type aliases"}),"\n",(0,s.jsx)(n.p,{children:"A type alias is an alternate name for an existing type. It can be declared like so:"}),"\n",(0,s.jsxs)(i.A,{groupId:"languages",children:[(0,s.jsx)(a.A,{value:"go",label:"Go",default:!0,children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"//ftl:typealias\ntype UserID string\n"})})}),(0,s.jsx)(a.A,{value:"kotlin",label:"Kotlin",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:"typealias UserID = String\n"})})}),(0,s.jsx)(a.A,{value:"java",label:"Java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// Java does not support type aliases directly\n// Use a wrapper class instead\npublic class UserID {\n    private final String value;\n\n    public UserID(String value) {\n        this.value = value;\n    }\n\n    public String getValue() {\n        return value;\n    }\n}\n"})})}),(0,s.jsxs)(a.A,{value:"schema",label:"Schema",children:[(0,s.jsxs)(n.p,{children:["In the FTL schema, type aliases are defined using the ",(0,s.jsx)(n.code,{children:"typealias"})," keyword:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-schema",children:"module example {\n  typealias UserID String\n}\n"})}),(0,s.jsx)(n.p,{children:"Type aliases can be used in data structures:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-schema",children:"module example {\n  typealias UserID String\n  \n  typealias UserMap Map<String, example.User>\n  \n  data User {\n    id example.UserID\n    name String\n  }\n}\n"})})]})]}),"\n",(0,s.jsx)(n.p,{children:"Type aliases are useful for making code more readable and type-safe by giving meaningful names to types that represent specific concepts in your domain."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},991:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var l=t(4700);const s={},r=l.createContext(s);function i(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),l.createElement(r.Provider,{value:n},e.children)}},1986:(e,n,t)=>{t.d(n,{A:()=>v});var l=t(4700),s=t(3372),r=t(9669),i=t(3263),a=t(7155),d=t(8814),c=t(543),o=t(2484);function h(e){return l.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function x(e){const{values:n,children:t}=e;return(0,l.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:l,default:s}}=e;return{value:n,label:t,attributes:l,default:s}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function u(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function j(e){let{queryString:n=!1,groupId:t}=e;const s=(0,i.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,d.aZ)(r),(0,l.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(s.location.search);n.set(r,e),s.replace({...s.location,search:n.toString()})}),[r,s])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,r=x(e),[i,d]=(0,l.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!u({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const l=t.find((e=>e.default))??t[0];if(!l)throw new Error("Unexpected error: 0 tabValues");return l.value}({defaultValue:n,tabValues:r}))),[c,h]=j({queryString:t,groupId:s}),[g,p]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,r]=(0,o.Dv)(t);return[s,(0,l.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:s}),y=(()=>{const e=c??g;return u({value:e,tabValues:r})?e:null})();(0,a.A)((()=>{y&&d(y)}),[y]);return{selectedValue:i,selectValue:(0,l.useCallback)((e=>{if(!u({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);d(e),h(e),p(e)}),[h,p,r]),tabValues:r}}var p=t(17);const y={tabList:"tabList_go4p",tabItem:"tabItem_apGJ"};var f=t(7968);function m(e){let{className:n,block:t,selectedValue:l,selectValue:i,tabValues:a}=e;const d=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),o=e=>{const n=e.currentTarget,t=d.indexOf(n),s=a[t].value;s!==l&&(c(n),i(s))},h=e=>{let n=null;switch(e.key){case"Enter":o(e);break;case"ArrowRight":{const t=d.indexOf(e.currentTarget)+1;n=d[t]??d[0];break}case"ArrowLeft":{const t=d.indexOf(e.currentTarget)-1;n=d[t]??d[d.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},n),children:a.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,ref:e=>{d.push(e)},onKeyDown:h,onClick:o,...r,className:(0,s.A)("tabs__item",y.tabItem,r?.className,{"tabs__item--active":l===n}),children:t??n},n)}))})}function b(e){let{lazy:n,children:t,selectedValue:r}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===r));return e?(0,l.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,l.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function A(e){const n=g(e);return(0,f.jsxs)("div",{className:(0,s.A)("tabs-container",y.tabList),children:[(0,f.jsx)(m,{...n,...e}),(0,f.jsx)(b,{...n,...e})]})}function v(e){const n=(0,p.A)();return(0,f.jsx)(A,{...e,children:h(e.children)},String(n))}},8033:(e,n,t)=>{t.d(n,{A:()=>i});t(4700);var l=t(3372);const s={tabItem:"tabItem_FJu3"};var r=t(7968);function i(e){let{children:n,hidden:t,className:i}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,l.A)(s.tabItem,i),hidden:t,children:n})}}}]);