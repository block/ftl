"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[717],{1959:(e,n,t)=>{t.d(n,{A:()=>l});t(4700);var r=t(3372);const a={tabItem:"tabItem_mh7X"};var s=t(7968);function l(e){let{children:n,hidden:t,className:l}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,l),hidden:t,children:n})}},2685:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>f,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"reference/secretsconfig","title":"Secrets/Config","description":"Secrets and Configuration values","source":"@site/docs/reference/secretsconfig.md","sourceDirName":"reference","slug":"/reference/secretsconfig","permalink":"/ftl/docs/reference/secretsconfig","draft":false,"unlisted":false,"editUrl":"https://github.com/block/ftl/tree/main/docs/docs/reference/secretsconfig.md","tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"sidebar_position":13,"title":"Secrets/Config","description":"Secrets and Configuration values"},"sidebar":"tutorialSidebar","previous":{"title":"Retries","permalink":"/ftl/docs/reference/retries"},"next":{"title":"Feature Matrix","permalink":"/ftl/docs/reference/matrix"}}');var a=t(7968),s=t(9435),l=t(3052),o=t(1959);const i={sidebar_position:13,title:"Secrets/Config",description:"Secrets and Configuration values"},c="Secrets and Configuration",u={},d=[{value:"Configuration",id:"configuration",level:2},{value:"Secrets",id:"secrets",level:2},{value:"Transforming secrets/configuration",id:"transforming-secretsconfiguration",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"secrets-and-configuration",children:"Secrets and Configuration"})}),"\n",(0,a.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,a.jsxs)(n.p,{children:["Configuration values are named, typed values. They are managed by the ",(0,a.jsx)(n.code,{children:"ftl config"})," command-line."]}),"\n","\n",(0,a.jsxs)(l.A,{groupId:"languages",children:[(0,a.jsxs)(o.A,{value:"go",label:"Go",default:!0,children:[(0,a.jsx)(n.p,{children:"To declare a configuration value use the following syntax:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:"// Simple string configuration\ntype ApiUrl = ftl.Config[string]\n\n// Type-safe configuration\ntype DefaultUser = ftl.Config[Username]\n"})}),(0,a.jsxs)(n.p,{children:["Note that the name of the configuration value as represented in the FTL schema is the lower camel case version of the type name (e.g., ",(0,a.jsx)(n.code,{children:"ApiUrl"})," becomes ",(0,a.jsx)(n.code,{children:"apiUrl"}),")."]}),(0,a.jsxs)(n.p,{children:["Configuration values can be injected into FTL methods, such as //ftl",":verb",", HTTP ingress, Cron etc. To inject a configuration value, use the following syntax:"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:"//ftl:verb\nfunc Hello(ctx context.Context, req Request, defaultUser DefaultUser) error {\n    username := defaultUser.Get(ctx)\n    // ...\n}\n"})})]}),(0,a.jsxs)(o.A,{value:"kotlin",label:"Kotlin",children:[(0,a.jsxs)(n.p,{children:["Configuration values can be injected into FTL methods, such as ",(0,a.jsx)(n.code,{children:"@Verb"}),", HTTP ingress, Cron etc. To inject a configuration value, use the following syntax:"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'@Export\n@Verb\nfun hello(helloRequest: HelloRequest, @Config("defaultUser") defaultUser: String): HelloResponse {\n    return HelloResponse("Hello, $defaultUser")\n}\n'})})]}),(0,a.jsxs)(o.A,{value:"java",label:"Java",children:[(0,a.jsxs)(n.p,{children:["Configuration values can be injected into FTL methods, such as ",(0,a.jsx)(n.code,{children:"@Verb"}),", HTTP ingress, Cron etc. To inject a configuration value, use the following syntax:"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'@Export\n@Verb\nHelloResponse hello(HelloRequest helloRequest, @Config("defaultUser") String defaultUser)  {\n    return new HelloResponse("Hello, " + defaultUser);\n}\n'})})]}),(0,a.jsxs)(o.A,{value:"schema",label:"Schema",children:[(0,a.jsx)(n.p,{children:"In the FTL schema, configuration values are declared as follows:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-schema",children:"module example {\n  config defaultUser String\n  \n  verb hello(Unit) String\n    +config example.defaultUser\n}\n"})}),(0,a.jsxs)(n.p,{children:["Configuration values have a name, a type, and can be injected into verbs using the ",(0,a.jsx)(n.code,{children:"+config"})," annotation."]})]})]}),"\n",(0,a.jsx)(n.h2,{id:"secrets",children:"Secrets"}),"\n",(0,a.jsxs)(n.p,{children:["Secrets are encrypted, named, typed values. They are managed by the ",(0,a.jsx)(n.code,{children:"ftl secret"})," command-line."]}),"\n",(0,a.jsxs)(l.A,{groupId:"languages",children:[(0,a.jsxs)(o.A,{value:"go",label:"Go",default:!0,children:[(0,a.jsx)(n.p,{children:"Declare a secret with the following:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:"// Simple string secret\ntype ApiToken = ftl.Secret[string]\n\n// Type-safe secret\ntype ApiKey = ftl.Secret[Credentials]\n"})}),(0,a.jsxs)(n.p,{children:["Like configuration values, the name of the secret as represented in the FTL schema is the lower camel case version of the type name (e.g., ",(0,a.jsx)(n.code,{children:"ApiToken"})," becomes ",(0,a.jsx)(n.code,{children:"apiToken"}),")."]}),(0,a.jsxs)(n.p,{children:["Secrets can be injected into FTL methods, such as //ftl",":verb",", HTTP ingress, Cron etc. To inject a secret value, use the following syntax:"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:"//ftl:verb\nfunc CallApi(ctx context.Context, req Request, apiKey ApiKey) error {\n    credentials := apiKey.Get(ctx)\n    // ...\n}\n"})})]}),(0,a.jsxs)(o.A,{value:"kotlin",label:"Kotlin",children:[(0,a.jsxs)(n.p,{children:["Secrets can be injected into FTL methods, such as ",(0,a.jsx)(n.code,{children:"@Verb"}),", HTTP ingress, Cron etc. To inject a secret value, use the following syntax:"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'@Export\n@Verb\nfun hello(helloRequest: HelloRequest, @Secret("apiKey") apiKey: String): HelloResponse {\n    return HelloResponse("Hello, ${api.call(apiKey)}")\n}\n'})})]}),(0,a.jsxs)(o.A,{value:"java",label:"Java",children:[(0,a.jsxs)(n.p,{children:["Secrets can be injected into FTL methods, such as ",(0,a.jsx)(n.code,{children:"@Verb"}),", HTTP ingress, Cron etc. To inject a secret value, use the following syntax:"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'@Export\n@Verb\nHelloResponse hello(HelloRequest helloRequest, @Secret("apiKey") String apiKey)  {\n    return new HelloResponse("Hello, " + api.call(apiKey));\n}\n'})})]}),(0,a.jsxs)(o.A,{value:"schema",label:"Schema",children:[(0,a.jsx)(n.p,{children:"In the FTL schema, secrets are declared as follows:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-schema",children:"module example {\n  // Secret declaration\n  secret apiToken String\n  secret apiKey example.Credentials\n  \n  // Using a secret in a verb\n  verb callApi(example.Request) Unit\n    +secret apiKey\n}\n"})}),(0,a.jsxs)(n.p,{children:["Secrets have a name, a type, and can be injected into verbs using the ",(0,a.jsx)(n.code,{children:"+secret"})," annotation."]})]})]}),"\n",(0,a.jsx)(n.h2,{id:"transforming-secretsconfiguration",children:"Transforming secrets/configuration"}),"\n",(0,a.jsxs)(n.p,{children:["Often, raw secret/configuration values aren't directly useful. For example, raw credentials might be used to create an API client. For those situations ",(0,a.jsx)(n.code,{children:"ftl.Map()"})," can be used to transform a configuration or secret value into another type:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:'var client = ftl.Map(ftl.Secret[Credentials]("credentials"),\n                     func(ctx context.Context, creds Credentials) (*api.Client, error) {\n    return api.NewClient(creds)\n})\n'})}),"\n",(0,a.jsx)(n.p,{children:"This is not currently supported in Kotlin or Java."})]})}function f(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},3052:(e,n,t)=>{t.d(n,{A:()=>T});var r=t(4700),a=t(3372),s=t(8641),l=t(3263),o=t(7625),i=t(826),c=t(7155),u=t(8200);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function f(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:t}=e;const a=(0,l.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,i.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(a.location.search);n.set(s,e),a.replace({...a.location,search:n.toString()})}),[s,a])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,s=h(e),[l,i]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!f({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:s}))),[c,d]=p({queryString:t,groupId:a}),[g,m]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,s]=(0,u.Dv)(t);return[a,(0,r.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:a}),x=(()=>{const e=c??g;return f({value:e,tabValues:s})?e:null})();(0,o.A)((()=>{x&&i(x)}),[x]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!f({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);i(e),d(e),m(e)}),[d,m,s]),tabValues:s}}var m=t(4283);const x={tabList:"tabList_XKP6",tabItem:"tabItem_xO6p"};var b=t(7968);function v(e){let{className:n,block:t,selectedValue:r,selectValue:l,tabValues:o}=e;const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),u=e=>{const n=e.currentTarget,t=i.indexOf(n),a=o[t].value;a!==r&&(c(n),l(a))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;n=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;n=i[t]??i[i.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>{i.push(e)},onKeyDown:d,onClick:u,...s,className:(0,a.A)("tabs__item",x.tabItem,s?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function j(e){let{lazy:n,children:t,selectedValue:s}=e;const l=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:l.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function y(e){const n=g(e);return(0,b.jsxs)("div",{className:(0,a.A)("tabs-container",x.tabList),children:[(0,b.jsx)(v,{...n,...e}),(0,b.jsx)(j,{...n,...e})]})}function T(e){const n=(0,m.A)();return(0,b.jsx)(y,{...e,children:d(e.children)},String(n))}},9435:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var r=t(4700);const a={},s=r.createContext(a);function l(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);