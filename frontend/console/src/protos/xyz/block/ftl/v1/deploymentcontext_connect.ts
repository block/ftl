// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts"
// @generated from file xyz/block/ftl/v1/deploymentcontext.proto (package xyz.block.ftl.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { PingRequest, PingResponse } from "./ftl_pb.js";
import { MethodIdempotency, MethodKind } from "@bufbuild/protobuf";
import { GetDeploymentContextRequest, GetDeploymentContextResponse } from "./deploymentcontext_pb.js";

/**
 * @generated from service xyz.block.ftl.v1.DeploymentContextService
 */
export const DeploymentContextService = {
  typeName: "xyz.block.ftl.v1.DeploymentContextService",
  methods: {
    /**
     * Ping service for readiness.
     *
     * @generated from rpc xyz.block.ftl.v1.DeploymentContextService.Ping
     */
    ping: {
      name: "Ping",
      I: PingRequest,
      O: PingResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * Get configuration state for the deployment
     *
     * @generated from rpc xyz.block.ftl.v1.DeploymentContextService.GetDeploymentContext
     */
    getDeploymentContext: {
      name: "GetDeploymentContext",
      I: GetDeploymentContextRequest,
      O: GetDeploymentContextResponse,
      kind: MethodKind.ServerStreaming,
    },
  }
} as const;

