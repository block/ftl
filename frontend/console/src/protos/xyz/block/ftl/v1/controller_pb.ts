// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file xyz/block/ftl/v1/controller.proto (package xyz.block.ftl.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Struct } from "@bufbuild/protobuf";
import { Module } from "../schema/v1/schema_pb.js";

/**
 * @generated from message xyz.block.ftl.v1.RegisterRunnerRequest
 */
export class RegisterRunnerRequest extends Message<RegisterRunnerRequest> {
  /**
   * @generated from field: string key = 1;
   */
  key = "";

  /**
   * @generated from field: string endpoint = 2;
   */
  endpoint = "";

  /**
   * @generated from field: string deployment = 3;
   */
  deployment = "";

  /**
   * @generated from field: google.protobuf.Struct labels = 5;
   */
  labels?: Struct;

  constructor(data?: PartialMessage<RegisterRunnerRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "xyz.block.ftl.v1.RegisterRunnerRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "deployment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "labels", kind: "message", T: Struct },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegisterRunnerRequest {
    return new RegisterRunnerRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegisterRunnerRequest {
    return new RegisterRunnerRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegisterRunnerRequest {
    return new RegisterRunnerRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RegisterRunnerRequest | PlainMessage<RegisterRunnerRequest> | undefined, b: RegisterRunnerRequest | PlainMessage<RegisterRunnerRequest> | undefined): boolean {
    return proto3.util.equals(RegisterRunnerRequest, a, b);
  }
}

/**
 * @generated from message xyz.block.ftl.v1.RegisterRunnerResponse
 */
export class RegisterRunnerResponse extends Message<RegisterRunnerResponse> {
  constructor(data?: PartialMessage<RegisterRunnerResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "xyz.block.ftl.v1.RegisterRunnerResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegisterRunnerResponse {
    return new RegisterRunnerResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegisterRunnerResponse {
    return new RegisterRunnerResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegisterRunnerResponse {
    return new RegisterRunnerResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RegisterRunnerResponse | PlainMessage<RegisterRunnerResponse> | undefined, b: RegisterRunnerResponse | PlainMessage<RegisterRunnerResponse> | undefined): boolean {
    return proto3.util.equals(RegisterRunnerResponse, a, b);
  }
}

/**
 * @generated from message xyz.block.ftl.v1.StatusRequest
 */
export class StatusRequest extends Message<StatusRequest> {
  constructor(data?: PartialMessage<StatusRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "xyz.block.ftl.v1.StatusRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StatusRequest {
    return new StatusRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StatusRequest {
    return new StatusRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StatusRequest {
    return new StatusRequest().fromJsonString(jsonString, options);
  }

  static equals(a: StatusRequest | PlainMessage<StatusRequest> | undefined, b: StatusRequest | PlainMessage<StatusRequest> | undefined): boolean {
    return proto3.util.equals(StatusRequest, a, b);
  }
}

/**
 * @generated from message xyz.block.ftl.v1.StatusResponse
 */
export class StatusResponse extends Message<StatusResponse> {
  /**
   * @generated from field: repeated xyz.block.ftl.v1.StatusResponse.Controller controllers = 1;
   */
  controllers: StatusResponse_Controller[] = [];

  /**
   * @generated from field: repeated xyz.block.ftl.v1.StatusResponse.Runner runners = 2;
   */
  runners: StatusResponse_Runner[] = [];

  /**
   * @generated from field: repeated xyz.block.ftl.v1.StatusResponse.Deployment deployments = 3;
   */
  deployments: StatusResponse_Deployment[] = [];

  /**
   * @generated from field: repeated xyz.block.ftl.v1.StatusResponse.Route routes = 5;
   */
  routes: StatusResponse_Route[] = [];

  constructor(data?: PartialMessage<StatusResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "xyz.block.ftl.v1.StatusResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "controllers", kind: "message", T: StatusResponse_Controller, repeated: true },
    { no: 2, name: "runners", kind: "message", T: StatusResponse_Runner, repeated: true },
    { no: 3, name: "deployments", kind: "message", T: StatusResponse_Deployment, repeated: true },
    { no: 5, name: "routes", kind: "message", T: StatusResponse_Route, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StatusResponse {
    return new StatusResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StatusResponse {
    return new StatusResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StatusResponse {
    return new StatusResponse().fromJsonString(jsonString, options);
  }

  static equals(a: StatusResponse | PlainMessage<StatusResponse> | undefined, b: StatusResponse | PlainMessage<StatusResponse> | undefined): boolean {
    return proto3.util.equals(StatusResponse, a, b);
  }
}

/**
 * @generated from message xyz.block.ftl.v1.StatusResponse.Controller
 */
export class StatusResponse_Controller extends Message<StatusResponse_Controller> {
  /**
   * @generated from field: string key = 1;
   */
  key = "";

  /**
   * @generated from field: string endpoint = 2;
   */
  endpoint = "";

  /**
   * @generated from field: string version = 3;
   */
  version = "";

  constructor(data?: PartialMessage<StatusResponse_Controller>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "xyz.block.ftl.v1.StatusResponse.Controller";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StatusResponse_Controller {
    return new StatusResponse_Controller().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StatusResponse_Controller {
    return new StatusResponse_Controller().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StatusResponse_Controller {
    return new StatusResponse_Controller().fromJsonString(jsonString, options);
  }

  static equals(a: StatusResponse_Controller | PlainMessage<StatusResponse_Controller> | undefined, b: StatusResponse_Controller | PlainMessage<StatusResponse_Controller> | undefined): boolean {
    return proto3.util.equals(StatusResponse_Controller, a, b);
  }
}

/**
 * @generated from message xyz.block.ftl.v1.StatusResponse.Runner
 */
export class StatusResponse_Runner extends Message<StatusResponse_Runner> {
  /**
   * @generated from field: string key = 1;
   */
  key = "";

  /**
   * @generated from field: string endpoint = 2;
   */
  endpoint = "";

  /**
   * @generated from field: optional string deployment = 3;
   */
  deployment?: string;

  /**
   * @generated from field: google.protobuf.Struct labels = 4;
   */
  labels?: Struct;

  constructor(data?: PartialMessage<StatusResponse_Runner>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "xyz.block.ftl.v1.StatusResponse.Runner";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "deployment", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "labels", kind: "message", T: Struct },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StatusResponse_Runner {
    return new StatusResponse_Runner().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StatusResponse_Runner {
    return new StatusResponse_Runner().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StatusResponse_Runner {
    return new StatusResponse_Runner().fromJsonString(jsonString, options);
  }

  static equals(a: StatusResponse_Runner | PlainMessage<StatusResponse_Runner> | undefined, b: StatusResponse_Runner | PlainMessage<StatusResponse_Runner> | undefined): boolean {
    return proto3.util.equals(StatusResponse_Runner, a, b);
  }
}

/**
 * @generated from message xyz.block.ftl.v1.StatusResponse.Deployment
 */
export class StatusResponse_Deployment extends Message<StatusResponse_Deployment> {
  /**
   * @generated from field: string key = 1;
   */
  key = "";

  /**
   * @generated from field: string language = 2;
   */
  language = "";

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * @generated from field: int32 min_replicas = 4;
   */
  minReplicas = 0;

  /**
   * @generated from field: int32 replicas = 7;
   */
  replicas = 0;

  /**
   * @generated from field: google.protobuf.Struct labels = 5;
   */
  labels?: Struct;

  /**
   * @generated from field: xyz.block.ftl.schema.v1.Module schema = 6;
   */
  schema?: Module;

  constructor(data?: PartialMessage<StatusResponse_Deployment>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "xyz.block.ftl.v1.StatusResponse.Deployment";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "min_replicas", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "replicas", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "labels", kind: "message", T: Struct },
    { no: 6, name: "schema", kind: "message", T: Module },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StatusResponse_Deployment {
    return new StatusResponse_Deployment().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StatusResponse_Deployment {
    return new StatusResponse_Deployment().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StatusResponse_Deployment {
    return new StatusResponse_Deployment().fromJsonString(jsonString, options);
  }

  static equals(a: StatusResponse_Deployment | PlainMessage<StatusResponse_Deployment> | undefined, b: StatusResponse_Deployment | PlainMessage<StatusResponse_Deployment> | undefined): boolean {
    return proto3.util.equals(StatusResponse_Deployment, a, b);
  }
}

/**
 * @generated from message xyz.block.ftl.v1.StatusResponse.Route
 */
export class StatusResponse_Route extends Message<StatusResponse_Route> {
  /**
   * @generated from field: string module = 1;
   */
  module = "";

  /**
   * @generated from field: string deployment = 2;
   */
  deployment = "";

  /**
   * @generated from field: string endpoint = 3;
   */
  endpoint = "";

  constructor(data?: PartialMessage<StatusResponse_Route>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "xyz.block.ftl.v1.StatusResponse.Route";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "module", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "deployment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StatusResponse_Route {
    return new StatusResponse_Route().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StatusResponse_Route {
    return new StatusResponse_Route().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StatusResponse_Route {
    return new StatusResponse_Route().fromJsonString(jsonString, options);
  }

  static equals(a: StatusResponse_Route | PlainMessage<StatusResponse_Route> | undefined, b: StatusResponse_Route | PlainMessage<StatusResponse_Route> | undefined): boolean {
    return proto3.util.equals(StatusResponse_Route, a, b);
  }
}

/**
 * @generated from message xyz.block.ftl.v1.ProcessListRequest
 */
export class ProcessListRequest extends Message<ProcessListRequest> {
  constructor(data?: PartialMessage<ProcessListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "xyz.block.ftl.v1.ProcessListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcessListRequest {
    return new ProcessListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcessListRequest {
    return new ProcessListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcessListRequest {
    return new ProcessListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProcessListRequest | PlainMessage<ProcessListRequest> | undefined, b: ProcessListRequest | PlainMessage<ProcessListRequest> | undefined): boolean {
    return proto3.util.equals(ProcessListRequest, a, b);
  }
}

/**
 * @generated from message xyz.block.ftl.v1.ProcessListResponse
 */
export class ProcessListResponse extends Message<ProcessListResponse> {
  /**
   * @generated from field: repeated xyz.block.ftl.v1.ProcessListResponse.Process processes = 1;
   */
  processes: ProcessListResponse_Process[] = [];

  constructor(data?: PartialMessage<ProcessListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "xyz.block.ftl.v1.ProcessListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "processes", kind: "message", T: ProcessListResponse_Process, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcessListResponse {
    return new ProcessListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcessListResponse {
    return new ProcessListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcessListResponse {
    return new ProcessListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ProcessListResponse | PlainMessage<ProcessListResponse> | undefined, b: ProcessListResponse | PlainMessage<ProcessListResponse> | undefined): boolean {
    return proto3.util.equals(ProcessListResponse, a, b);
  }
}

/**
 * @generated from message xyz.block.ftl.v1.ProcessListResponse.ProcessRunner
 */
export class ProcessListResponse_ProcessRunner extends Message<ProcessListResponse_ProcessRunner> {
  /**
   * @generated from field: string key = 1;
   */
  key = "";

  /**
   * @generated from field: string endpoint = 2;
   */
  endpoint = "";

  /**
   * @generated from field: google.protobuf.Struct labels = 3;
   */
  labels?: Struct;

  constructor(data?: PartialMessage<ProcessListResponse_ProcessRunner>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "xyz.block.ftl.v1.ProcessListResponse.ProcessRunner";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "labels", kind: "message", T: Struct },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcessListResponse_ProcessRunner {
    return new ProcessListResponse_ProcessRunner().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcessListResponse_ProcessRunner {
    return new ProcessListResponse_ProcessRunner().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcessListResponse_ProcessRunner {
    return new ProcessListResponse_ProcessRunner().fromJsonString(jsonString, options);
  }

  static equals(a: ProcessListResponse_ProcessRunner | PlainMessage<ProcessListResponse_ProcessRunner> | undefined, b: ProcessListResponse_ProcessRunner | PlainMessage<ProcessListResponse_ProcessRunner> | undefined): boolean {
    return proto3.util.equals(ProcessListResponse_ProcessRunner, a, b);
  }
}

/**
 * @generated from message xyz.block.ftl.v1.ProcessListResponse.Process
 */
export class ProcessListResponse_Process extends Message<ProcessListResponse_Process> {
  /**
   * @generated from field: string deployment = 1;
   */
  deployment = "";

  /**
   * @generated from field: int32 min_replicas = 2;
   */
  minReplicas = 0;

  /**
   * @generated from field: google.protobuf.Struct labels = 3;
   */
  labels?: Struct;

  /**
   * @generated from field: optional xyz.block.ftl.v1.ProcessListResponse.ProcessRunner runner = 4;
   */
  runner?: ProcessListResponse_ProcessRunner;

  constructor(data?: PartialMessage<ProcessListResponse_Process>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "xyz.block.ftl.v1.ProcessListResponse.Process";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "deployment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "min_replicas", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "labels", kind: "message", T: Struct },
    { no: 4, name: "runner", kind: "message", T: ProcessListResponse_ProcessRunner, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcessListResponse_Process {
    return new ProcessListResponse_Process().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcessListResponse_Process {
    return new ProcessListResponse_Process().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcessListResponse_Process {
    return new ProcessListResponse_Process().fromJsonString(jsonString, options);
  }

  static equals(a: ProcessListResponse_Process | PlainMessage<ProcessListResponse_Process> | undefined, b: ProcessListResponse_Process | PlainMessage<ProcessListResponse_Process> | undefined): boolean {
    return proto3.util.equals(ProcessListResponse_Process, a, b);
  }
}

/**
 * @generated from message xyz.block.ftl.v1.GetDeploymentContextRequest
 */
export class GetDeploymentContextRequest extends Message<GetDeploymentContextRequest> {
  /**
   * @generated from field: string deployment = 1;
   */
  deployment = "";

  constructor(data?: PartialMessage<GetDeploymentContextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "xyz.block.ftl.v1.GetDeploymentContextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "deployment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDeploymentContextRequest {
    return new GetDeploymentContextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDeploymentContextRequest {
    return new GetDeploymentContextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDeploymentContextRequest {
    return new GetDeploymentContextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDeploymentContextRequest | PlainMessage<GetDeploymentContextRequest> | undefined, b: GetDeploymentContextRequest | PlainMessage<GetDeploymentContextRequest> | undefined): boolean {
    return proto3.util.equals(GetDeploymentContextRequest, a, b);
  }
}

/**
 * @generated from message xyz.block.ftl.v1.GetDeploymentContextResponse
 */
export class GetDeploymentContextResponse extends Message<GetDeploymentContextResponse> {
  /**
   * @generated from field: string module = 1;
   */
  module = "";

  /**
   * @generated from field: string deployment = 2;
   */
  deployment = "";

  /**
   * @generated from field: map<string, bytes> configs = 3;
   */
  configs: { [key: string]: Uint8Array } = {};

  /**
   * @generated from field: map<string, bytes> secrets = 4;
   */
  secrets: { [key: string]: Uint8Array } = {};

  /**
   * @generated from field: repeated xyz.block.ftl.v1.GetDeploymentContextResponse.DSN databases = 5;
   */
  databases: GetDeploymentContextResponse_DSN[] = [];

  /**
   * @generated from field: repeated xyz.block.ftl.v1.GetDeploymentContextResponse.Route routes = 6;
   */
  routes: GetDeploymentContextResponse_Route[] = [];

  /**
   * @generated from field: map<string, string> egress = 7;
   */
  egress: { [key: string]: string } = {};

  constructor(data?: PartialMessage<GetDeploymentContextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "xyz.block.ftl.v1.GetDeploymentContextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "module", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "deployment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "configs", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 12 /* ScalarType.BYTES */} },
    { no: 4, name: "secrets", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 12 /* ScalarType.BYTES */} },
    { no: 5, name: "databases", kind: "message", T: GetDeploymentContextResponse_DSN, repeated: true },
    { no: 6, name: "routes", kind: "message", T: GetDeploymentContextResponse_Route, repeated: true },
    { no: 7, name: "egress", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDeploymentContextResponse {
    return new GetDeploymentContextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDeploymentContextResponse {
    return new GetDeploymentContextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDeploymentContextResponse {
    return new GetDeploymentContextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDeploymentContextResponse | PlainMessage<GetDeploymentContextResponse> | undefined, b: GetDeploymentContextResponse | PlainMessage<GetDeploymentContextResponse> | undefined): boolean {
    return proto3.util.equals(GetDeploymentContextResponse, a, b);
  }
}

/**
 * @generated from enum xyz.block.ftl.v1.GetDeploymentContextResponse.DbType
 */
export enum GetDeploymentContextResponse_DbType {
  /**
   * @generated from enum value: DB_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: DB_TYPE_POSTGRES = 1;
   */
  POSTGRES = 1,

  /**
   * @generated from enum value: DB_TYPE_MYSQL = 2;
   */
  MYSQL = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(GetDeploymentContextResponse_DbType)
proto3.util.setEnumType(GetDeploymentContextResponse_DbType, "xyz.block.ftl.v1.GetDeploymentContextResponse.DbType", [
  { no: 0, name: "DB_TYPE_UNSPECIFIED" },
  { no: 1, name: "DB_TYPE_POSTGRES" },
  { no: 2, name: "DB_TYPE_MYSQL" },
]);

/**
 * @generated from message xyz.block.ftl.v1.GetDeploymentContextResponse.DSN
 */
export class GetDeploymentContextResponse_DSN extends Message<GetDeploymentContextResponse_DSN> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: xyz.block.ftl.v1.GetDeploymentContextResponse.DbType type = 2;
   */
  type = GetDeploymentContextResponse_DbType.UNSPECIFIED;

  /**
   * @generated from field: string dsn = 3;
   */
  dsn = "";

  constructor(data?: PartialMessage<GetDeploymentContextResponse_DSN>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "xyz.block.ftl.v1.GetDeploymentContextResponse.DSN";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "type", kind: "enum", T: proto3.getEnumType(GetDeploymentContextResponse_DbType) },
    { no: 3, name: "dsn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDeploymentContextResponse_DSN {
    return new GetDeploymentContextResponse_DSN().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDeploymentContextResponse_DSN {
    return new GetDeploymentContextResponse_DSN().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDeploymentContextResponse_DSN {
    return new GetDeploymentContextResponse_DSN().fromJsonString(jsonString, options);
  }

  static equals(a: GetDeploymentContextResponse_DSN | PlainMessage<GetDeploymentContextResponse_DSN> | undefined, b: GetDeploymentContextResponse_DSN | PlainMessage<GetDeploymentContextResponse_DSN> | undefined): boolean {
    return proto3.util.equals(GetDeploymentContextResponse_DSN, a, b);
  }
}

/**
 * @generated from message xyz.block.ftl.v1.GetDeploymentContextResponse.Route
 */
export class GetDeploymentContextResponse_Route extends Message<GetDeploymentContextResponse_Route> {
  /**
   * @generated from field: string deployment = 1;
   */
  deployment = "";

  /**
   * @generated from field: string uri = 2;
   */
  uri = "";

  constructor(data?: PartialMessage<GetDeploymentContextResponse_Route>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "xyz.block.ftl.v1.GetDeploymentContextResponse.Route";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "deployment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDeploymentContextResponse_Route {
    return new GetDeploymentContextResponse_Route().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDeploymentContextResponse_Route {
    return new GetDeploymentContextResponse_Route().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDeploymentContextResponse_Route {
    return new GetDeploymentContextResponse_Route().fromJsonString(jsonString, options);
  }

  static equals(a: GetDeploymentContextResponse_Route | PlainMessage<GetDeploymentContextResponse_Route> | undefined, b: GetDeploymentContextResponse_Route | PlainMessage<GetDeploymentContextResponse_Route> | undefined): boolean {
    return proto3.util.equals(GetDeploymentContextResponse_Route, a, b);
  }
}

