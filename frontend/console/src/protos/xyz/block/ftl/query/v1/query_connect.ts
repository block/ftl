// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts"
// @generated from file xyz/block/ftl/query/v1/query.proto (package xyz.block.ftl.query.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { PingRequest, PingResponse } from "../../v1/ftl_pb.js";
import { MethodIdempotency, MethodKind } from "@bufbuild/protobuf";
import { BeginTransactionRequest, BeginTransactionResponse, CommitTransactionRequest, CommitTransactionResponse, ExecuteQueryRequest, ExecuteQueryResponse, RollbackTransactionRequest, RollbackTransactionResponse } from "./query_pb.js";

/**
 * @generated from service xyz.block.ftl.query.v1.QueryService
 */
export const QueryService = {
  typeName: "xyz.block.ftl.query.v1.QueryService",
  methods: {
    /**
     * Ping service for readiness
     *
     * @generated from rpc xyz.block.ftl.query.v1.QueryService.Ping
     */
    ping: {
      name: "Ping",
      I: PingRequest,
      O: PingResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * Begins a new transaction and returns a transaction ID.
     *
     * @generated from rpc xyz.block.ftl.query.v1.QueryService.BeginTransaction
     */
    beginTransaction: {
      name: "BeginTransaction",
      I: BeginTransactionRequest,
      O: BeginTransactionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Commits a transaction.
     *
     * @generated from rpc xyz.block.ftl.query.v1.QueryService.CommitTransaction
     */
    commitTransaction: {
      name: "CommitTransaction",
      I: CommitTransactionRequest,
      O: CommitTransactionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Rolls back a transaction.
     *
     * @generated from rpc xyz.block.ftl.query.v1.QueryService.RollbackTransaction
     */
    rollbackTransaction: {
      name: "RollbackTransaction",
      I: RollbackTransactionRequest,
      O: RollbackTransactionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Executes a raw SQL query, optionally within a transaction.
     *
     * @generated from rpc xyz.block.ftl.query.v1.QueryService.ExecuteQuery
     */
    executeQuery: {
      name: "ExecuteQuery",
      I: ExecuteQueryRequest,
      O: ExecuteQueryResponse,
      kind: MethodKind.ServerStreaming,
    },
  }
} as const;

