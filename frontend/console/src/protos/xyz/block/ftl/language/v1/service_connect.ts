// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts"
// @generated from file xyz/block/ftl/language/v1/service.proto (package xyz.block.ftl.language.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { PingRequest, PingResponse } from "../../v1/ftl_pb.js";
import { MethodIdempotency, MethodKind } from "@bufbuild/protobuf";
import { BuildRequest, BuildResponse, GenerateStubsRequest, GenerateStubsResponse, GetDependenciesRequest, GetDependenciesResponse, SyncStubReferencesRequest, SyncStubReferencesResponse } from "./service_pb.js";

/**
 * LanguageService allows a plugin to add support for a programming language.
 *
 * @generated from service xyz.block.ftl.language.v1.LanguageService
 */
export const LanguageService = {
  typeName: "xyz.block.ftl.language.v1.LanguageService",
  methods: {
    /**
     * Ping service for readiness.
     *
     * @generated from rpc xyz.block.ftl.language.v1.LanguageService.Ping
     */
    ping: {
      name: "Ping",
      I: PingRequest,
      O: PingResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * Extract dependencies for a module
     * FTL will ensure that these dependencies are built before requesting a build for this module.
     *
     * @generated from rpc xyz.block.ftl.language.v1.LanguageService.GetDependencies
     */
    getDependencies: {
      name: "GetDependencies",
      I: GetDependenciesRequest,
      O: GetDependenciesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Build the module and receive the result
     *
     *
     *
     * @generated from rpc xyz.block.ftl.language.v1.LanguageService.Build
     */
    build: {
      name: "Build",
      I: BuildRequest,
      O: BuildResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Generate stubs for a module.
     *
     * Stubs allow modules to import other module's exported interface. If a language does not need this step,
     * then it is not required to do anything in this call.
     *
     * This call is not tied to the module that this plugin is responsible for. A plugin of each language will
     * be chosen to generate stubs for each module.
     *
     * @generated from rpc xyz.block.ftl.language.v1.LanguageService.GenerateStubs
     */
    generateStubs: {
      name: "GenerateStubs",
      I: GenerateStubsRequest,
      O: GenerateStubsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * SyncStubReferences is called when module stubs have been updated. This allows the plugin to update
     * references to external modules, regardless of whether they are dependencies.
     *
     * For example, go plugin adds references to all modules into the go.work file so that tools can automatically
     * import the modules when users start reference them.
     *
     * It is optional to do anything with this call.
     *
     * @generated from rpc xyz.block.ftl.language.v1.LanguageService.SyncStubReferences
     */
    syncStubReferences: {
      name: "SyncStubReferences",
      I: SyncStubReferencesRequest,
      O: SyncStubReferencesResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

