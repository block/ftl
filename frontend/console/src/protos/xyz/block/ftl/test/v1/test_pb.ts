// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file xyz/block/ftl/test/v1/test.proto (package xyz.block.ftl.test.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message xyz.block.ftl.test.v1.StartTestRunRequest
 */
export class StartTestRunRequest extends Message<StartTestRunRequest> {
  /**
   * @generated from field: string module_name = 1;
   */
  moduleName = "";

  /**
   * @generated from field: string endpoint = 2;
   */
  endpoint = "";

  /**
   * @generated from field: string hot_reload_endpoint = 3;
   */
  hotReloadEndpoint = "";

  constructor(data?: PartialMessage<StartTestRunRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "xyz.block.ftl.test.v1.StartTestRunRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "module_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "hot_reload_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StartTestRunRequest {
    return new StartTestRunRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StartTestRunRequest {
    return new StartTestRunRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StartTestRunRequest {
    return new StartTestRunRequest().fromJsonString(jsonString, options);
  }

  static equals(a: StartTestRunRequest | PlainMessage<StartTestRunRequest> | undefined, b: StartTestRunRequest | PlainMessage<StartTestRunRequest> | undefined): boolean {
    return proto3.util.equals(StartTestRunRequest, a, b);
  }
}

/**
 * @generated from message xyz.block.ftl.test.v1.StartTestRunResponse
 */
export class StartTestRunResponse extends Message<StartTestRunResponse> {
  /**
   * @generated from field: string deployment_key = 1;
   */
  deploymentKey = "";

  constructor(data?: PartialMessage<StartTestRunResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "xyz.block.ftl.test.v1.StartTestRunResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "deployment_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StartTestRunResponse {
    return new StartTestRunResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StartTestRunResponse {
    return new StartTestRunResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StartTestRunResponse {
    return new StartTestRunResponse().fromJsonString(jsonString, options);
  }

  static equals(a: StartTestRunResponse | PlainMessage<StartTestRunResponse> | undefined, b: StartTestRunResponse | PlainMessage<StartTestRunResponse> | undefined): boolean {
    return proto3.util.equals(StartTestRunResponse, a, b);
  }
}

