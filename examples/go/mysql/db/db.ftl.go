// Code generated by FTL. DO NOT EDIT.
package db

import (
	"context"
	"github.com/block/ftl/common/reflection"
	"github.com/block/ftl/go-runtime/ftl"
	"github.com/block/ftl/go-runtime/server"
)

//ftl:database mysql testdb
type TestdbConfig struct{}

type TestdbHandle = ftl.DatabaseHandle[TestdbConfig]

type AuthorRow struct {
	Id        int
	Bio       ftl.Option[string]
	BirthYear ftl.Option[int]
	Hometown  ftl.Option[string]
}
type GetAuthorInfoRow struct {
	Bio      ftl.Option[string]
	Hometown ftl.Option[string]
}
type GetManyAuthorsInfoRow struct {
	Bio      ftl.Option[string]
	Hometown ftl.Option[string]
}
type UpdateAuthorBioQuery struct {
	Bio ftl.Option[string]
	Id  int
}

type CreateRequestClient func(context.Context, ftl.Option[string]) error

type GetAllAuthorsClient func(context.Context) ([]AuthorRow, error)

type GetAuthorByIdClient func(context.Context, int) (AuthorRow, error)

type GetAuthorInfoClient func(context.Context, int) (GetAuthorInfoRow, error)

type GetManyAuthorsInfoClient func(context.Context, int) ([]GetManyAuthorsInfoRow, error)

type GetRequestDataClient func(context.Context) ([]ftl.Option[string], error)

type UpdateAuthorBioClient func(context.Context, UpdateAuthorBioQuery) error

func init() {
	reflection.Register(
		reflection.Database[TestdbConfig]("testdb", server.InitMySQL),
	)
}
