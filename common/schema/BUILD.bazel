load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "schema",
    srcs = [
        "aliaskind_enumer.go",
        "any.go",
        "array.go",
        "bool.go",
        "builtin.go",
        "bytes.go",
        "changeset.go",
        "config.go",
        "data.go",
        "database.go",
        "databaseruntime.go",
        "edges.go",
        "encoding.go",
        "enum.go",
        "field.go",
        "float.go",
        "go2proto.to.go",
        "int.go",
        "intvalue.go",
        "jsonschema.go",
        "jsonvalidate.go",
        "map.go",
        "metadataalias.go",
        "metadataartefact.go",
        "metadatacalls.go",
        "metadataconfig.go",
        "metadatacronjob.go",
        "metadatadatabases.go",
        "metadataencoding.go",
        "metadatafixture.go",
        "metadatagenerated.go",
        "metadatagitcommit.go",
        "metadataingress.go",
        "metadatapartitions.go",
        "metadatapublisher.go",
        "metadataretry.go",
        "metadatasecrets.go",
        "metadatasqlcolumn.go",
        "metadatasqlmigration.go",
        "metadatasqlquery.go",
        "metadatasubscriber.go",
        "metadatatransaction.go",
        "metadatatypemap.go",
        "module.go",
        "moduleruntime.go",
        "moduleruntimebase.go",
        "moduleruntimedeployment.go",
        "moduleruntimerunner.go",
        "moduleruntimescaling.go",
        "normalise.go",
        "notifications.go",
        "optional.go",
        "parser.go",
        "provisioned.go",
        "raftevents.go",
        "realm.go",
        "redact.go",
        "ref.go",
        "runtimeelement.go",
        "schema.go",
        "secret.go",
        "string.go",
        "stringvalue.go",
        "time.go",
        "topic.go",
        "topicruntime.go",
        "typealias.go",
        "typeparameter.go",
        "typeresolver.go",
        "typevalue.go",
        "unit.go",
        "validate.go",
        "verb.go",
        "verbruntime.go",
        "visit.go",
    ],
    importpath = "github.com/block/ftl/common/schema",
    visibility = ["//visibility:public"],
    deps = [
        "//common/builderrors",
        "//common/cron",
        "//common/duration",
        "//common/errors",
        "//common/protos/xyz/block/ftl/schema/v1:schema",
        "//common/reflect",
        "//common/sha256",
        "//common/slices",
        "//internal/key",
        "@com_github_alecthomas_errors//:errors",
        "@com_github_alecthomas_participle_v2//:participle",
        "@com_github_alecthomas_participle_v2//lexer",
        "@com_github_alecthomas_types//optional",
        "@com_github_alecthomas_types//result",
        "@com_github_deckarep_golang_set_v2//:golang-set",
        "@com_github_google_go_cmp//cmp",
        "@com_github_google_go_cmp//cmp/cmpopts",
        "@com_github_swaggest_jsonschema_go//:jsonschema-go",
        "@org_golang_google_protobuf//proto",
        "@org_golang_google_protobuf//types/known/durationpb",
        "@org_golang_google_protobuf//types/known/timestamppb",
        "@org_golang_x_exp//maps",
    ],
)

go_test(
    name = "schema_test",
    srcs = [
        "data_test.go",
        "edges_test.go",
        "jsonschema_test.go",
        "jsonvalidate_test.go",
        "protobuf_test.go",
        "redact_test.go",
        "schema_test.go",
        "typeresolver_test.go",
        "validate_test.go",
        "verb_test.go",
    ],
    embed = [":schema"],
    deps = [
        "//common/sha256",
        "//common/slices",
        "@com_github_alecthomas_assert_v2//:assert",
        "@com_github_alecthomas_errors//:errors",
        "@com_github_alecthomas_types//optional",
        "@com_github_santhosh_tekuri_jsonschema_v5//:jsonschema",
        "@org_golang_x_exp//maps",
    ],
)
