// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        (unknown)
// source: xyz/block/ftl/buildengine/v1/buildengine.proto

package buildenginepb

import (
	v1 "github.com/block/ftl/backend/protos/xyz/block/ftl/language/v1"
	v11 "github.com/block/ftl/backend/protos/xyz/block/ftl/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EngineStarted is published when the engine becomes busy building and deploying modules.
type EngineStarted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EngineStarted) Reset() {
	*x = EngineStarted{}
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EngineStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngineStarted) ProtoMessage() {}

func (x *EngineStarted) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngineStarted.ProtoReflect.Descriptor instead.
func (*EngineStarted) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_buildengine_v1_buildengine_proto_rawDescGZIP(), []int{0}
}

// EngineEnded is published when the engine is no longer building or deploying any modules.
// If there are any remaining errors, they will be included in the ModuleErrors map.
type EngineEnded struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	ModuleErrors  map[string]*v1.ErrorList `protobuf:"bytes,1,rep,name=module_errors,json=moduleErrors,proto3" json:"module_errors,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // module name -> error
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EngineEnded) Reset() {
	*x = EngineEnded{}
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EngineEnded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngineEnded) ProtoMessage() {}

func (x *EngineEnded) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngineEnded.ProtoReflect.Descriptor instead.
func (*EngineEnded) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_buildengine_v1_buildengine_proto_rawDescGZIP(), []int{1}
}

func (x *EngineEnded) GetModuleErrors() map[string]*v1.ErrorList {
	if x != nil {
		return x.ModuleErrors
	}
	return nil
}

// ModuleAdded is published when the engine discovers a module.
type ModuleAdded struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Module        string                 `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModuleAdded) Reset() {
	*x = ModuleAdded{}
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModuleAdded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleAdded) ProtoMessage() {}

func (x *ModuleAdded) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleAdded.ProtoReflect.Descriptor instead.
func (*ModuleAdded) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_buildengine_v1_buildengine_proto_rawDescGZIP(), []int{2}
}

func (x *ModuleAdded) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

// ModuleRemoved is published when the engine discovers a module has been removed.
type ModuleRemoved struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Module        string                 `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModuleRemoved) Reset() {
	*x = ModuleRemoved{}
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModuleRemoved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleRemoved) ProtoMessage() {}

func (x *ModuleRemoved) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleRemoved.ProtoReflect.Descriptor instead.
func (*ModuleRemoved) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_buildengine_v1_buildengine_proto_rawDescGZIP(), []int{3}
}

func (x *ModuleRemoved) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

// ModuleBuildWaiting is published when a build is waiting for dependencies to build
type ModuleBuildWaiting struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *v1.ModuleConfig       `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModuleBuildWaiting) Reset() {
	*x = ModuleBuildWaiting{}
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModuleBuildWaiting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleBuildWaiting) ProtoMessage() {}

func (x *ModuleBuildWaiting) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleBuildWaiting.ProtoReflect.Descriptor instead.
func (*ModuleBuildWaiting) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_buildengine_v1_buildengine_proto_rawDescGZIP(), []int{4}
}

func (x *ModuleBuildWaiting) GetConfig() *v1.ModuleConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// ModuleBuildStarted is published when a build has started for a module.
type ModuleBuildStarted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *v1.ModuleConfig       `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	IsAutoRebuild bool                   `protobuf:"varint,2,opt,name=is_auto_rebuild,json=isAutoRebuild,proto3" json:"is_auto_rebuild,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModuleBuildStarted) Reset() {
	*x = ModuleBuildStarted{}
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModuleBuildStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleBuildStarted) ProtoMessage() {}

func (x *ModuleBuildStarted) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleBuildStarted.ProtoReflect.Descriptor instead.
func (*ModuleBuildStarted) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_buildengine_v1_buildengine_proto_rawDescGZIP(), []int{5}
}

func (x *ModuleBuildStarted) GetConfig() *v1.ModuleConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ModuleBuildStarted) GetIsAutoRebuild() bool {
	if x != nil {
		return x.IsAutoRebuild
	}
	return false
}

// ModuleBuildFailed is published for any build failures.
type ModuleBuildFailed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *v1.ModuleConfig       `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	Errors        *v1.ErrorList          `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
	IsAutoRebuild bool                   `protobuf:"varint,3,opt,name=is_auto_rebuild,json=isAutoRebuild,proto3" json:"is_auto_rebuild,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModuleBuildFailed) Reset() {
	*x = ModuleBuildFailed{}
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModuleBuildFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleBuildFailed) ProtoMessage() {}

func (x *ModuleBuildFailed) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleBuildFailed.ProtoReflect.Descriptor instead.
func (*ModuleBuildFailed) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_buildengine_v1_buildengine_proto_rawDescGZIP(), []int{6}
}

func (x *ModuleBuildFailed) GetConfig() *v1.ModuleConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ModuleBuildFailed) GetErrors() *v1.ErrorList {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *ModuleBuildFailed) GetIsAutoRebuild() bool {
	if x != nil {
		return x.IsAutoRebuild
	}
	return false
}

// ModuleBuildSuccess is published when all modules have been built successfully built.
type ModuleBuildSuccess struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *v1.ModuleConfig       `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	IsAutoRebuild bool                   `protobuf:"varint,2,opt,name=is_auto_rebuild,json=isAutoRebuild,proto3" json:"is_auto_rebuild,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModuleBuildSuccess) Reset() {
	*x = ModuleBuildSuccess{}
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModuleBuildSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleBuildSuccess) ProtoMessage() {}

func (x *ModuleBuildSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleBuildSuccess.ProtoReflect.Descriptor instead.
func (*ModuleBuildSuccess) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_buildengine_v1_buildengine_proto_rawDescGZIP(), []int{7}
}

func (x *ModuleBuildSuccess) GetConfig() *v1.ModuleConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ModuleBuildSuccess) GetIsAutoRebuild() bool {
	if x != nil {
		return x.IsAutoRebuild
	}
	return false
}

// ModuleDeployStarted is published when a deploy has begun for a module.
type ModuleDeployStarted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Module        string                 `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModuleDeployStarted) Reset() {
	*x = ModuleDeployStarted{}
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModuleDeployStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleDeployStarted) ProtoMessage() {}

func (x *ModuleDeployStarted) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleDeployStarted.ProtoReflect.Descriptor instead.
func (*ModuleDeployStarted) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_buildengine_v1_buildengine_proto_rawDescGZIP(), []int{8}
}

func (x *ModuleDeployStarted) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

// ModuleDeployFailed is published for any deploy failures.
type ModuleDeployFailed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Module        string                 `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	Errors        *v1.ErrorList          `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModuleDeployFailed) Reset() {
	*x = ModuleDeployFailed{}
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModuleDeployFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleDeployFailed) ProtoMessage() {}

func (x *ModuleDeployFailed) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleDeployFailed.ProtoReflect.Descriptor instead.
func (*ModuleDeployFailed) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_buildengine_v1_buildengine_proto_rawDescGZIP(), []int{9}
}

func (x *ModuleDeployFailed) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *ModuleDeployFailed) GetErrors() *v1.ErrorList {
	if x != nil {
		return x.Errors
	}
	return nil
}

// ModuleDeploySuccess is published when all modules have been built successfully deployed.
type ModuleDeploySuccess struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Module        string                 `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModuleDeploySuccess) Reset() {
	*x = ModuleDeploySuccess{}
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModuleDeploySuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleDeploySuccess) ProtoMessage() {}

func (x *ModuleDeploySuccess) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleDeploySuccess.ProtoReflect.Descriptor instead.
func (*ModuleDeploySuccess) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_buildengine_v1_buildengine_proto_rawDescGZIP(), []int{10}
}

func (x *ModuleDeploySuccess) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

// EngineEvent is an event published by the engine as modules get built and deployed.
type EngineEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Event:
	//
	//	*EngineEvent_EngineStarted
	//	*EngineEvent_EngineEnded
	//	*EngineEvent_ModuleAdded
	//	*EngineEvent_ModuleRemoved
	//	*EngineEvent_ModuleBuildWaiting
	//	*EngineEvent_ModuleBuildStarted
	//	*EngineEvent_ModuleBuildFailed
	//	*EngineEvent_ModuleBuildSuccess
	//	*EngineEvent_ModuleDeployStarted
	//	*EngineEvent_ModuleDeployFailed
	//	*EngineEvent_ModuleDeploySuccess
	Event         isEngineEvent_Event `protobuf_oneof:"event"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EngineEvent) Reset() {
	*x = EngineEvent{}
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EngineEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngineEvent) ProtoMessage() {}

func (x *EngineEvent) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngineEvent.ProtoReflect.Descriptor instead.
func (*EngineEvent) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_buildengine_v1_buildengine_proto_rawDescGZIP(), []int{11}
}

func (x *EngineEvent) GetEvent() isEngineEvent_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *EngineEvent) GetEngineStarted() *EngineStarted {
	if x != nil {
		if x, ok := x.Event.(*EngineEvent_EngineStarted); ok {
			return x.EngineStarted
		}
	}
	return nil
}

func (x *EngineEvent) GetEngineEnded() *EngineEnded {
	if x != nil {
		if x, ok := x.Event.(*EngineEvent_EngineEnded); ok {
			return x.EngineEnded
		}
	}
	return nil
}

func (x *EngineEvent) GetModuleAdded() *ModuleAdded {
	if x != nil {
		if x, ok := x.Event.(*EngineEvent_ModuleAdded); ok {
			return x.ModuleAdded
		}
	}
	return nil
}

func (x *EngineEvent) GetModuleRemoved() *ModuleRemoved {
	if x != nil {
		if x, ok := x.Event.(*EngineEvent_ModuleRemoved); ok {
			return x.ModuleRemoved
		}
	}
	return nil
}

func (x *EngineEvent) GetModuleBuildWaiting() *ModuleBuildWaiting {
	if x != nil {
		if x, ok := x.Event.(*EngineEvent_ModuleBuildWaiting); ok {
			return x.ModuleBuildWaiting
		}
	}
	return nil
}

func (x *EngineEvent) GetModuleBuildStarted() *ModuleBuildStarted {
	if x != nil {
		if x, ok := x.Event.(*EngineEvent_ModuleBuildStarted); ok {
			return x.ModuleBuildStarted
		}
	}
	return nil
}

func (x *EngineEvent) GetModuleBuildFailed() *ModuleBuildFailed {
	if x != nil {
		if x, ok := x.Event.(*EngineEvent_ModuleBuildFailed); ok {
			return x.ModuleBuildFailed
		}
	}
	return nil
}

func (x *EngineEvent) GetModuleBuildSuccess() *ModuleBuildSuccess {
	if x != nil {
		if x, ok := x.Event.(*EngineEvent_ModuleBuildSuccess); ok {
			return x.ModuleBuildSuccess
		}
	}
	return nil
}

func (x *EngineEvent) GetModuleDeployStarted() *ModuleDeployStarted {
	if x != nil {
		if x, ok := x.Event.(*EngineEvent_ModuleDeployStarted); ok {
			return x.ModuleDeployStarted
		}
	}
	return nil
}

func (x *EngineEvent) GetModuleDeployFailed() *ModuleDeployFailed {
	if x != nil {
		if x, ok := x.Event.(*EngineEvent_ModuleDeployFailed); ok {
			return x.ModuleDeployFailed
		}
	}
	return nil
}

func (x *EngineEvent) GetModuleDeploySuccess() *ModuleDeploySuccess {
	if x != nil {
		if x, ok := x.Event.(*EngineEvent_ModuleDeploySuccess); ok {
			return x.ModuleDeploySuccess
		}
	}
	return nil
}

type isEngineEvent_Event interface {
	isEngineEvent_Event()
}

type EngineEvent_EngineStarted struct {
	EngineStarted *EngineStarted `protobuf:"bytes,1,opt,name=engine_started,json=engineStarted,proto3,oneof"`
}

type EngineEvent_EngineEnded struct {
	EngineEnded *EngineEnded `protobuf:"bytes,2,opt,name=engine_ended,json=engineEnded,proto3,oneof"`
}

type EngineEvent_ModuleAdded struct {
	ModuleAdded *ModuleAdded `protobuf:"bytes,3,opt,name=module_added,json=moduleAdded,proto3,oneof"`
}

type EngineEvent_ModuleRemoved struct {
	ModuleRemoved *ModuleRemoved `protobuf:"bytes,4,opt,name=module_removed,json=moduleRemoved,proto3,oneof"`
}

type EngineEvent_ModuleBuildWaiting struct {
	ModuleBuildWaiting *ModuleBuildWaiting `protobuf:"bytes,5,opt,name=module_build_waiting,json=moduleBuildWaiting,proto3,oneof"`
}

type EngineEvent_ModuleBuildStarted struct {
	ModuleBuildStarted *ModuleBuildStarted `protobuf:"bytes,6,opt,name=module_build_started,json=moduleBuildStarted,proto3,oneof"`
}

type EngineEvent_ModuleBuildFailed struct {
	ModuleBuildFailed *ModuleBuildFailed `protobuf:"bytes,7,opt,name=module_build_failed,json=moduleBuildFailed,proto3,oneof"`
}

type EngineEvent_ModuleBuildSuccess struct {
	ModuleBuildSuccess *ModuleBuildSuccess `protobuf:"bytes,8,opt,name=module_build_success,json=moduleBuildSuccess,proto3,oneof"`
}

type EngineEvent_ModuleDeployStarted struct {
	ModuleDeployStarted *ModuleDeployStarted `protobuf:"bytes,9,opt,name=module_deploy_started,json=moduleDeployStarted,proto3,oneof"`
}

type EngineEvent_ModuleDeployFailed struct {
	ModuleDeployFailed *ModuleDeployFailed `protobuf:"bytes,10,opt,name=module_deploy_failed,json=moduleDeployFailed,proto3,oneof"`
}

type EngineEvent_ModuleDeploySuccess struct {
	ModuleDeploySuccess *ModuleDeploySuccess `protobuf:"bytes,11,opt,name=module_deploy_success,json=moduleDeploySuccess,proto3,oneof"`
}

func (*EngineEvent_EngineStarted) isEngineEvent_Event() {}

func (*EngineEvent_EngineEnded) isEngineEvent_Event() {}

func (*EngineEvent_ModuleAdded) isEngineEvent_Event() {}

func (*EngineEvent_ModuleRemoved) isEngineEvent_Event() {}

func (*EngineEvent_ModuleBuildWaiting) isEngineEvent_Event() {}

func (*EngineEvent_ModuleBuildStarted) isEngineEvent_Event() {}

func (*EngineEvent_ModuleBuildFailed) isEngineEvent_Event() {}

func (*EngineEvent_ModuleBuildSuccess) isEngineEvent_Event() {}

func (*EngineEvent_ModuleDeployStarted) isEngineEvent_Event() {}

func (*EngineEvent_ModuleDeployFailed) isEngineEvent_Event() {}

func (*EngineEvent_ModuleDeploySuccess) isEngineEvent_Event() {}

type StreamEngineEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamEngineEventsRequest) Reset() {
	*x = StreamEngineEventsRequest{}
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEngineEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEngineEventsRequest) ProtoMessage() {}

func (x *StreamEngineEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEngineEventsRequest.ProtoReflect.Descriptor instead.
func (*StreamEngineEventsRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_buildengine_v1_buildengine_proto_rawDescGZIP(), []int{12}
}

type StreamEngineEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *EngineEvent           `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamEngineEventsResponse) Reset() {
	*x = StreamEngineEventsResponse{}
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEngineEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEngineEventsResponse) ProtoMessage() {}

func (x *StreamEngineEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEngineEventsResponse.ProtoReflect.Descriptor instead.
func (*StreamEngineEventsResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_buildengine_v1_buildengine_proto_rawDescGZIP(), []int{13}
}

func (x *StreamEngineEventsResponse) GetEvent() *EngineEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

var File_xyz_block_ftl_buildengine_v1_buildengine_proto protoreflect.FileDescriptor

var file_xyz_block_ftl_buildengine_v1_buildengine_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1c, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x28,
	0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x74, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0f, 0x0a, 0x0d, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x22, 0xd6, 0x01, 0x0a, 0x0b, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x45, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x60, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x78,
	0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x1a, 0x65, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3a,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x25,
	0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x27, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x55,
	0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x57, 0x61, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x3f, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x7d, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x78, 0x79,
	0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x26, 0x0a, 0x0f,
	0x69, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x22, 0xba, 0x01, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x78, 0x79, 0x7a,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3c, 0x0a, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x78, 0x79,
	0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f,
	0x61, 0x75, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x22, 0x7d, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3f, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x61,
	0x75, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x22, 0x2d, 0x0a, 0x13, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22,
	0x6a, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x46,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x3c, 0x0a,
	0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x2d, 0x0a, 0x13, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0xaf, 0x08, 0x0a, 0x0b, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x0e, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66,
	0x74, 0x6c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x0d, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x12, 0x4e, 0x0a, 0x0c, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x64, 0x65,
	0x64, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x64, 0x65, 0x64,
	0x12, 0x4e, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x65,
	0x64, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x65, 0x64,
	0x12, 0x54, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x64, 0x0a, 0x14, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x57,
	0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x12, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x64, 0x0a, 0x14,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x78, 0x79, 0x7a,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x12,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x64, 0x12, 0x61, 0x0a, 0x13, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x48, 0x00, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x46,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x64, 0x0a, 0x14, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x66, 0x74, 0x6c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x12, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x67, 0x0a, 0x15, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x78, 0x79, 0x7a,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52,
	0x13, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x12, 0x64, 0x0a, 0x14, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66,
	0x74, 0x6c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x46, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x48, 0x00, 0x52, 0x12, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x67, 0x0a, 0x15, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x13,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x1b, 0x0a, 0x19,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5d, 0x0a, 0x1a, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x32, 0xee, 0x01, 0x0a, 0x12, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x4a, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x90, 0x02, 0x01, 0x12, 0x8b, 0x01, 0x0a, 0x12,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x37, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66,
	0x74, 0x6c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x78, 0x79,
	0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x50, 0x5a, 0x4e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x74,
	0x6c, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2f, 0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_xyz_block_ftl_buildengine_v1_buildengine_proto_rawDescOnce sync.Once
	file_xyz_block_ftl_buildengine_v1_buildengine_proto_rawDescData = file_xyz_block_ftl_buildengine_v1_buildengine_proto_rawDesc
)

func file_xyz_block_ftl_buildengine_v1_buildengine_proto_rawDescGZIP() []byte {
	file_xyz_block_ftl_buildengine_v1_buildengine_proto_rawDescOnce.Do(func() {
		file_xyz_block_ftl_buildengine_v1_buildengine_proto_rawDescData = protoimpl.X.CompressGZIP(file_xyz_block_ftl_buildengine_v1_buildengine_proto_rawDescData)
	})
	return file_xyz_block_ftl_buildengine_v1_buildengine_proto_rawDescData
}

var file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_xyz_block_ftl_buildengine_v1_buildengine_proto_goTypes = []any{
	(*EngineStarted)(nil),              // 0: xyz.block.ftl.buildengine.v1.EngineStarted
	(*EngineEnded)(nil),                // 1: xyz.block.ftl.buildengine.v1.EngineEnded
	(*ModuleAdded)(nil),                // 2: xyz.block.ftl.buildengine.v1.ModuleAdded
	(*ModuleRemoved)(nil),              // 3: xyz.block.ftl.buildengine.v1.ModuleRemoved
	(*ModuleBuildWaiting)(nil),         // 4: xyz.block.ftl.buildengine.v1.ModuleBuildWaiting
	(*ModuleBuildStarted)(nil),         // 5: xyz.block.ftl.buildengine.v1.ModuleBuildStarted
	(*ModuleBuildFailed)(nil),          // 6: xyz.block.ftl.buildengine.v1.ModuleBuildFailed
	(*ModuleBuildSuccess)(nil),         // 7: xyz.block.ftl.buildengine.v1.ModuleBuildSuccess
	(*ModuleDeployStarted)(nil),        // 8: xyz.block.ftl.buildengine.v1.ModuleDeployStarted
	(*ModuleDeployFailed)(nil),         // 9: xyz.block.ftl.buildengine.v1.ModuleDeployFailed
	(*ModuleDeploySuccess)(nil),        // 10: xyz.block.ftl.buildengine.v1.ModuleDeploySuccess
	(*EngineEvent)(nil),                // 11: xyz.block.ftl.buildengine.v1.EngineEvent
	(*StreamEngineEventsRequest)(nil),  // 12: xyz.block.ftl.buildengine.v1.StreamEngineEventsRequest
	(*StreamEngineEventsResponse)(nil), // 13: xyz.block.ftl.buildengine.v1.StreamEngineEventsResponse
	nil,                                // 14: xyz.block.ftl.buildengine.v1.EngineEnded.ModuleErrorsEntry
	(*v1.ModuleConfig)(nil),            // 15: xyz.block.ftl.language.v1.ModuleConfig
	(*v1.ErrorList)(nil),               // 16: xyz.block.ftl.language.v1.ErrorList
	(*v11.PingRequest)(nil),            // 17: xyz.block.ftl.v1.PingRequest
	(*v11.PingResponse)(nil),           // 18: xyz.block.ftl.v1.PingResponse
}
var file_xyz_block_ftl_buildengine_v1_buildengine_proto_depIdxs = []int32{
	14, // 0: xyz.block.ftl.buildengine.v1.EngineEnded.module_errors:type_name -> xyz.block.ftl.buildengine.v1.EngineEnded.ModuleErrorsEntry
	15, // 1: xyz.block.ftl.buildengine.v1.ModuleBuildWaiting.config:type_name -> xyz.block.ftl.language.v1.ModuleConfig
	15, // 2: xyz.block.ftl.buildengine.v1.ModuleBuildStarted.config:type_name -> xyz.block.ftl.language.v1.ModuleConfig
	15, // 3: xyz.block.ftl.buildengine.v1.ModuleBuildFailed.config:type_name -> xyz.block.ftl.language.v1.ModuleConfig
	16, // 4: xyz.block.ftl.buildengine.v1.ModuleBuildFailed.errors:type_name -> xyz.block.ftl.language.v1.ErrorList
	15, // 5: xyz.block.ftl.buildengine.v1.ModuleBuildSuccess.config:type_name -> xyz.block.ftl.language.v1.ModuleConfig
	16, // 6: xyz.block.ftl.buildengine.v1.ModuleDeployFailed.errors:type_name -> xyz.block.ftl.language.v1.ErrorList
	0,  // 7: xyz.block.ftl.buildengine.v1.EngineEvent.engine_started:type_name -> xyz.block.ftl.buildengine.v1.EngineStarted
	1,  // 8: xyz.block.ftl.buildengine.v1.EngineEvent.engine_ended:type_name -> xyz.block.ftl.buildengine.v1.EngineEnded
	2,  // 9: xyz.block.ftl.buildengine.v1.EngineEvent.module_added:type_name -> xyz.block.ftl.buildengine.v1.ModuleAdded
	3,  // 10: xyz.block.ftl.buildengine.v1.EngineEvent.module_removed:type_name -> xyz.block.ftl.buildengine.v1.ModuleRemoved
	4,  // 11: xyz.block.ftl.buildengine.v1.EngineEvent.module_build_waiting:type_name -> xyz.block.ftl.buildengine.v1.ModuleBuildWaiting
	5,  // 12: xyz.block.ftl.buildengine.v1.EngineEvent.module_build_started:type_name -> xyz.block.ftl.buildengine.v1.ModuleBuildStarted
	6,  // 13: xyz.block.ftl.buildengine.v1.EngineEvent.module_build_failed:type_name -> xyz.block.ftl.buildengine.v1.ModuleBuildFailed
	7,  // 14: xyz.block.ftl.buildengine.v1.EngineEvent.module_build_success:type_name -> xyz.block.ftl.buildengine.v1.ModuleBuildSuccess
	8,  // 15: xyz.block.ftl.buildengine.v1.EngineEvent.module_deploy_started:type_name -> xyz.block.ftl.buildengine.v1.ModuleDeployStarted
	9,  // 16: xyz.block.ftl.buildengine.v1.EngineEvent.module_deploy_failed:type_name -> xyz.block.ftl.buildengine.v1.ModuleDeployFailed
	10, // 17: xyz.block.ftl.buildengine.v1.EngineEvent.module_deploy_success:type_name -> xyz.block.ftl.buildengine.v1.ModuleDeploySuccess
	11, // 18: xyz.block.ftl.buildengine.v1.StreamEngineEventsResponse.event:type_name -> xyz.block.ftl.buildengine.v1.EngineEvent
	16, // 19: xyz.block.ftl.buildengine.v1.EngineEnded.ModuleErrorsEntry.value:type_name -> xyz.block.ftl.language.v1.ErrorList
	17, // 20: xyz.block.ftl.buildengine.v1.BuildEngineService.Ping:input_type -> xyz.block.ftl.v1.PingRequest
	12, // 21: xyz.block.ftl.buildengine.v1.BuildEngineService.StreamEngineEvents:input_type -> xyz.block.ftl.buildengine.v1.StreamEngineEventsRequest
	18, // 22: xyz.block.ftl.buildengine.v1.BuildEngineService.Ping:output_type -> xyz.block.ftl.v1.PingResponse
	13, // 23: xyz.block.ftl.buildengine.v1.BuildEngineService.StreamEngineEvents:output_type -> xyz.block.ftl.buildengine.v1.StreamEngineEventsResponse
	22, // [22:24] is the sub-list for method output_type
	20, // [20:22] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_xyz_block_ftl_buildengine_v1_buildengine_proto_init() }
func file_xyz_block_ftl_buildengine_v1_buildengine_proto_init() {
	if File_xyz_block_ftl_buildengine_v1_buildengine_proto != nil {
		return
	}
	file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes[11].OneofWrappers = []any{
		(*EngineEvent_EngineStarted)(nil),
		(*EngineEvent_EngineEnded)(nil),
		(*EngineEvent_ModuleAdded)(nil),
		(*EngineEvent_ModuleRemoved)(nil),
		(*EngineEvent_ModuleBuildWaiting)(nil),
		(*EngineEvent_ModuleBuildStarted)(nil),
		(*EngineEvent_ModuleBuildFailed)(nil),
		(*EngineEvent_ModuleBuildSuccess)(nil),
		(*EngineEvent_ModuleDeployStarted)(nil),
		(*EngineEvent_ModuleDeployFailed)(nil),
		(*EngineEvent_ModuleDeploySuccess)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_xyz_block_ftl_buildengine_v1_buildengine_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_xyz_block_ftl_buildengine_v1_buildengine_proto_goTypes,
		DependencyIndexes: file_xyz_block_ftl_buildengine_v1_buildengine_proto_depIdxs,
		MessageInfos:      file_xyz_block_ftl_buildengine_v1_buildengine_proto_msgTypes,
	}.Build()
	File_xyz_block_ftl_buildengine_v1_buildengine_proto = out.File
	file_xyz_block_ftl_buildengine_v1_buildengine_proto_rawDesc = nil
	file_xyz_block_ftl_buildengine_v1_buildengine_proto_goTypes = nil
	file_xyz_block_ftl_buildengine_v1_buildengine_proto_depIdxs = nil
}
