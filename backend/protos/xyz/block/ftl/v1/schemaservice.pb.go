// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        (unknown)
// source: xyz/block/ftl/v1/schemaservice.proto

package ftlv1

import (
	v1 "github.com/block/ftl/common/protos/xyz/block/ftl/schema/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetSchemaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSchemaRequest) Reset() {
	*x = GetSchemaRequest{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchemaRequest) ProtoMessage() {}

func (x *GetSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchemaRequest.ProtoReflect.Descriptor instead.
func (*GetSchemaRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{0}
}

type GetSchemaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schema        *v1.Schema             `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	Changesets    []*v1.Changeset        `protobuf:"bytes,2,rep,name=changesets,proto3" json:"changesets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSchemaResponse) Reset() {
	*x = GetSchemaResponse{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchemaResponse) ProtoMessage() {}

func (x *GetSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchemaResponse.ProtoReflect.Descriptor instead.
func (*GetSchemaResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{1}
}

func (x *GetSchemaResponse) GetSchema() *v1.Schema {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *GetSchemaResponse) GetChangesets() []*v1.Changeset {
	if x != nil {
		return x.Changesets
	}
	return nil
}

type PullSchemaRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PullSchemaRequest) Reset() {
	*x = PullSchemaRequest{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullSchemaRequest) ProtoMessage() {}

func (x *PullSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullSchemaRequest.ProtoReflect.Descriptor instead.
func (*PullSchemaRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{2}
}

func (x *PullSchemaRequest) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type PullSchemaResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Event:
	//
	//	*PullSchemaResponse_ChangesetCreated_
	//	*PullSchemaResponse_ChangesetFailed_
	//	*PullSchemaResponse_ChangesetCommitted_
	//	*PullSchemaResponse_DeploymentCreated_
	//	*PullSchemaResponse_DeploymentUpdated_
	//	*PullSchemaResponse_DeploymentRemoved_
	Event isPullSchemaResponse_Event `protobuf_oneof:"event"`
	// If true there are more schema changes immediately following this one as part of the initial batch.
	// If false this is the last schema change in the initial batch, but others may follow later.
	More          bool `protobuf:"varint,31634,opt,name=more,proto3" json:"more,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullSchemaResponse) Reset() {
	*x = PullSchemaResponse{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullSchemaResponse) ProtoMessage() {}

func (x *PullSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullSchemaResponse.ProtoReflect.Descriptor instead.
func (*PullSchemaResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{3}
}

func (x *PullSchemaResponse) GetEvent() isPullSchemaResponse_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *PullSchemaResponse) GetChangesetCreated() *PullSchemaResponse_ChangesetCreated {
	if x != nil {
		if x, ok := x.Event.(*PullSchemaResponse_ChangesetCreated_); ok {
			return x.ChangesetCreated
		}
	}
	return nil
}

func (x *PullSchemaResponse) GetChangesetFailed() *PullSchemaResponse_ChangesetFailed {
	if x != nil {
		if x, ok := x.Event.(*PullSchemaResponse_ChangesetFailed_); ok {
			return x.ChangesetFailed
		}
	}
	return nil
}

func (x *PullSchemaResponse) GetChangesetCommitted() *PullSchemaResponse_ChangesetCommitted {
	if x != nil {
		if x, ok := x.Event.(*PullSchemaResponse_ChangesetCommitted_); ok {
			return x.ChangesetCommitted
		}
	}
	return nil
}

func (x *PullSchemaResponse) GetDeploymentCreated() *PullSchemaResponse_DeploymentCreated {
	if x != nil {
		if x, ok := x.Event.(*PullSchemaResponse_DeploymentCreated_); ok {
			return x.DeploymentCreated
		}
	}
	return nil
}

func (x *PullSchemaResponse) GetDeploymentUpdated() *PullSchemaResponse_DeploymentUpdated {
	if x != nil {
		if x, ok := x.Event.(*PullSchemaResponse_DeploymentUpdated_); ok {
			return x.DeploymentUpdated
		}
	}
	return nil
}

func (x *PullSchemaResponse) GetDeploymentRemoved() *PullSchemaResponse_DeploymentRemoved {
	if x != nil {
		if x, ok := x.Event.(*PullSchemaResponse_DeploymentRemoved_); ok {
			return x.DeploymentRemoved
		}
	}
	return nil
}

func (x *PullSchemaResponse) GetMore() bool {
	if x != nil {
		return x.More
	}
	return false
}

type isPullSchemaResponse_Event interface {
	isPullSchemaResponse_Event()
}

type PullSchemaResponse_ChangesetCreated_ struct {
	ChangesetCreated *PullSchemaResponse_ChangesetCreated `protobuf:"bytes,4,opt,name=changeset_created,json=changesetCreated,proto3,oneof"`
}

type PullSchemaResponse_ChangesetFailed_ struct {
	ChangesetFailed *PullSchemaResponse_ChangesetFailed `protobuf:"bytes,5,opt,name=changeset_failed,json=changesetFailed,proto3,oneof"`
}

type PullSchemaResponse_ChangesetCommitted_ struct {
	ChangesetCommitted *PullSchemaResponse_ChangesetCommitted `protobuf:"bytes,6,opt,name=changeset_committed,json=changesetCommitted,proto3,oneof"`
}

type PullSchemaResponse_DeploymentCreated_ struct {
	DeploymentCreated *PullSchemaResponse_DeploymentCreated `protobuf:"bytes,7,opt,name=deployment_created,json=deploymentCreated,proto3,oneof"`
}

type PullSchemaResponse_DeploymentUpdated_ struct {
	DeploymentUpdated *PullSchemaResponse_DeploymentUpdated `protobuf:"bytes,8,opt,name=deployment_updated,json=deploymentUpdated,proto3,oneof"`
}

type PullSchemaResponse_DeploymentRemoved_ struct {
	DeploymentRemoved *PullSchemaResponse_DeploymentRemoved `protobuf:"bytes,9,opt,name=deployment_removed,json=deploymentRemoved,proto3,oneof"`
}

func (*PullSchemaResponse_ChangesetCreated_) isPullSchemaResponse_Event() {}

func (*PullSchemaResponse_ChangesetFailed_) isPullSchemaResponse_Event() {}

func (*PullSchemaResponse_ChangesetCommitted_) isPullSchemaResponse_Event() {}

func (*PullSchemaResponse_DeploymentCreated_) isPullSchemaResponse_Event() {}

func (*PullSchemaResponse_DeploymentUpdated_) isPullSchemaResponse_Event() {}

func (*PullSchemaResponse_DeploymentRemoved_) isPullSchemaResponse_Event() {}

type UpdateDeploymentRuntimeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *v1.ModuleRuntimeEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDeploymentRuntimeRequest) Reset() {
	*x = UpdateDeploymentRuntimeRequest{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDeploymentRuntimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeploymentRuntimeRequest) ProtoMessage() {}

func (x *UpdateDeploymentRuntimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeploymentRuntimeRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeploymentRuntimeRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateDeploymentRuntimeRequest) GetEvent() *v1.ModuleRuntimeEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type UpdateDeploymentRuntimeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDeploymentRuntimeResponse) Reset() {
	*x = UpdateDeploymentRuntimeResponse{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDeploymentRuntimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeploymentRuntimeResponse) ProtoMessage() {}

func (x *UpdateDeploymentRuntimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeploymentRuntimeResponse.ProtoReflect.Descriptor instead.
func (*UpdateDeploymentRuntimeResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{5}
}

type UpdateSchemaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *v1.Event              `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSchemaRequest) Reset() {
	*x = UpdateSchemaRequest{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSchemaRequest) ProtoMessage() {}

func (x *UpdateSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSchemaRequest.ProtoReflect.Descriptor instead.
func (*UpdateSchemaRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateSchemaRequest) GetEvent() *v1.Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type UpdateSchemaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSchemaResponse) Reset() {
	*x = UpdateSchemaResponse{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSchemaResponse) ProtoMessage() {}

func (x *UpdateSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSchemaResponse.ProtoReflect.Descriptor instead.
func (*UpdateSchemaResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{7}
}

type GetDeploymentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeploymentsRequest) Reset() {
	*x = GetDeploymentsRequest{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeploymentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentsRequest) ProtoMessage() {}

func (x *GetDeploymentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentsRequest.ProtoReflect.Descriptor instead.
func (*GetDeploymentsRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{8}
}

type GetDeploymentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schema        []*DeployedSchema      `protobuf:"bytes,1,rep,name=schema,proto3" json:"schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeploymentsResponse) Reset() {
	*x = GetDeploymentsResponse{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeploymentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentsResponse) ProtoMessage() {}

func (x *GetDeploymentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentsResponse.ProtoReflect.Descriptor instead.
func (*GetDeploymentsResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{9}
}

func (x *GetDeploymentsResponse) GetSchema() []*DeployedSchema {
	if x != nil {
		return x.Schema
	}
	return nil
}

type CreateChangesetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The modules to add or update.
	Modules []*v1.Module `protobuf:"bytes,1,rep,name=modules,proto3" json:"modules,omitempty"`
	// The deployments to remove.
	RemovedDeployments []string `protobuf:"bytes,2,rep,name=removed_deployments,json=removedDeployments,proto3" json:"removed_deployments,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CreateChangesetRequest) Reset() {
	*x = CreateChangesetRequest{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChangesetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChangesetRequest) ProtoMessage() {}

func (x *CreateChangesetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChangesetRequest.ProtoReflect.Descriptor instead.
func (*CreateChangesetRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{10}
}

func (x *CreateChangesetRequest) GetModules() []*v1.Module {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *CreateChangesetRequest) GetRemovedDeployments() []string {
	if x != nil {
		return x.RemovedDeployments
	}
	return nil
}

type CreateChangesetResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The changeset key of the newly created changeset.
	Changeset     string `protobuf:"bytes,1,opt,name=changeset,proto3" json:"changeset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChangesetResponse) Reset() {
	*x = CreateChangesetResponse{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChangesetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChangesetResponse) ProtoMessage() {}

func (x *CreateChangesetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChangesetResponse.ProtoReflect.Descriptor instead.
func (*CreateChangesetResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{11}
}

func (x *CreateChangesetResponse) GetChangeset() string {
	if x != nil {
		return x.Changeset
	}
	return ""
}

type DeployedSchema struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeploymentKey string                 `protobuf:"bytes,1,opt,name=deployment_key,json=deploymentKey,proto3" json:"deployment_key,omitempty"`
	Schema        *v1.Module             `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	IsActive      bool                   `protobuf:"varint,3,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeployedSchema) Reset() {
	*x = DeployedSchema{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeployedSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployedSchema) ProtoMessage() {}

func (x *DeployedSchema) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployedSchema.ProtoReflect.Descriptor instead.
func (*DeployedSchema) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{12}
}

func (x *DeployedSchema) GetDeploymentKey() string {
	if x != nil {
		return x.DeploymentKey
	}
	return ""
}

func (x *DeployedSchema) GetSchema() *v1.Module {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *DeployedSchema) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type PrepareChangesetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The changeset key to prepare.
	Changeset     string `protobuf:"bytes,1,opt,name=changeset,proto3" json:"changeset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrepareChangesetRequest) Reset() {
	*x = PrepareChangesetRequest{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareChangesetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareChangesetRequest) ProtoMessage() {}

func (x *PrepareChangesetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareChangesetRequest.ProtoReflect.Descriptor instead.
func (*PrepareChangesetRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{13}
}

func (x *PrepareChangesetRequest) GetChangeset() string {
	if x != nil {
		return x.Changeset
	}
	return ""
}

type PrepareChangesetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrepareChangesetResponse) Reset() {
	*x = PrepareChangesetResponse{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareChangesetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareChangesetResponse) ProtoMessage() {}

func (x *PrepareChangesetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareChangesetResponse.ProtoReflect.Descriptor instead.
func (*PrepareChangesetResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{14}
}

type CommitChangesetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The changeset key to commit.
	Changeset     string `protobuf:"bytes,1,opt,name=changeset,proto3" json:"changeset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitChangesetRequest) Reset() {
	*x = CommitChangesetRequest{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitChangesetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitChangesetRequest) ProtoMessage() {}

func (x *CommitChangesetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitChangesetRequest.ProtoReflect.Descriptor instead.
func (*CommitChangesetRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{15}
}

func (x *CommitChangesetRequest) GetChangeset() string {
	if x != nil {
		return x.Changeset
	}
	return ""
}

type CommitChangesetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Changeset     *v1.Changeset          `protobuf:"bytes,1,opt,name=changeset,proto3" json:"changeset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitChangesetResponse) Reset() {
	*x = CommitChangesetResponse{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitChangesetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitChangesetResponse) ProtoMessage() {}

func (x *CommitChangesetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitChangesetResponse.ProtoReflect.Descriptor instead.
func (*CommitChangesetResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{16}
}

func (x *CommitChangesetResponse) GetChangeset() *v1.Changeset {
	if x != nil {
		return x.Changeset
	}
	return nil
}

type DrainChangesetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The changeset key to commit.
	Changeset     string `protobuf:"bytes,1,opt,name=changeset,proto3" json:"changeset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DrainChangesetRequest) Reset() {
	*x = DrainChangesetRequest{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DrainChangesetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrainChangesetRequest) ProtoMessage() {}

func (x *DrainChangesetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrainChangesetRequest.ProtoReflect.Descriptor instead.
func (*DrainChangesetRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{17}
}

func (x *DrainChangesetRequest) GetChangeset() string {
	if x != nil {
		return x.Changeset
	}
	return ""
}

type DrainChangesetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DrainChangesetResponse) Reset() {
	*x = DrainChangesetResponse{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DrainChangesetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrainChangesetResponse) ProtoMessage() {}

func (x *DrainChangesetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrainChangesetResponse.ProtoReflect.Descriptor instead.
func (*DrainChangesetResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{18}
}

type FinalizeChangesetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The changeset key to commit.
	Changeset     string `protobuf:"bytes,1,opt,name=changeset,proto3" json:"changeset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeChangesetRequest) Reset() {
	*x = FinalizeChangesetRequest{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeChangesetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeChangesetRequest) ProtoMessage() {}

func (x *FinalizeChangesetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeChangesetRequest.ProtoReflect.Descriptor instead.
func (*FinalizeChangesetRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{19}
}

func (x *FinalizeChangesetRequest) GetChangeset() string {
	if x != nil {
		return x.Changeset
	}
	return ""
}

type FinalizeChangesetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeChangesetResponse) Reset() {
	*x = FinalizeChangesetResponse{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeChangesetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeChangesetResponse) ProtoMessage() {}

func (x *FinalizeChangesetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeChangesetResponse.ProtoReflect.Descriptor instead.
func (*FinalizeChangesetResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{20}
}

type FailChangesetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The changeset key to fail.
	Changeset     string `protobuf:"bytes,1,opt,name=changeset,proto3" json:"changeset,omitempty"`
	Error         string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FailChangesetRequest) Reset() {
	*x = FailChangesetRequest{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FailChangesetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailChangesetRequest) ProtoMessage() {}

func (x *FailChangesetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailChangesetRequest.ProtoReflect.Descriptor instead.
func (*FailChangesetRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{21}
}

func (x *FailChangesetRequest) GetChangeset() string {
	if x != nil {
		return x.Changeset
	}
	return ""
}

func (x *FailChangesetRequest) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type FailChangesetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FailChangesetResponse) Reset() {
	*x = FailChangesetResponse{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FailChangesetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailChangesetResponse) ProtoMessage() {}

func (x *FailChangesetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailChangesetResponse.ProtoReflect.Descriptor instead.
func (*FailChangesetResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{22}
}

type GetDeploymentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeploymentKey string                 `protobuf:"bytes,1,opt,name=deployment_key,json=deploymentKey,proto3" json:"deployment_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeploymentRequest) Reset() {
	*x = GetDeploymentRequest{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentRequest) ProtoMessage() {}

func (x *GetDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentRequest.ProtoReflect.Descriptor instead.
func (*GetDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{23}
}

func (x *GetDeploymentRequest) GetDeploymentKey() string {
	if x != nil {
		return x.DeploymentKey
	}
	return ""
}

type GetDeploymentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schema        *v1.Module             `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeploymentResponse) Reset() {
	*x = GetDeploymentResponse{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeploymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentResponse) ProtoMessage() {}

func (x *GetDeploymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentResponse.ProtoReflect.Descriptor instead.
func (*GetDeploymentResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{24}
}

func (x *GetDeploymentResponse) GetSchema() *v1.Module {
	if x != nil {
		return x.Schema
	}
	return nil
}

// ChangesetCreated is sent when a new changeset is created.
type PullSchemaResponse_ChangesetCreated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Changeset     *v1.Changeset          `protobuf:"bytes,1,opt,name=changeset,proto3" json:"changeset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullSchemaResponse_ChangesetCreated) Reset() {
	*x = PullSchemaResponse_ChangesetCreated{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullSchemaResponse_ChangesetCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullSchemaResponse_ChangesetCreated) ProtoMessage() {}

func (x *PullSchemaResponse_ChangesetCreated) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullSchemaResponse_ChangesetCreated.ProtoReflect.Descriptor instead.
func (*PullSchemaResponse_ChangesetCreated) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{3, 0}
}

func (x *PullSchemaResponse_ChangesetCreated) GetChangeset() *v1.Changeset {
	if x != nil {
		return x.Changeset
	}
	return nil
}

// ChangesetFailed is sent when a changeset fails.
type PullSchemaResponse_ChangesetFailed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullSchemaResponse_ChangesetFailed) Reset() {
	*x = PullSchemaResponse_ChangesetFailed{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullSchemaResponse_ChangesetFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullSchemaResponse_ChangesetFailed) ProtoMessage() {}

func (x *PullSchemaResponse_ChangesetFailed) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullSchemaResponse_ChangesetFailed.ProtoReflect.Descriptor instead.
func (*PullSchemaResponse_ChangesetFailed) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{3, 1}
}

func (x *PullSchemaResponse_ChangesetFailed) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PullSchemaResponse_ChangesetFailed) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// ChangesetFailed is sent when a changeset becomes canonical.
type PullSchemaResponse_ChangesetCommitted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Changeset     *v1.Changeset          `protobuf:"bytes,1,opt,name=changeset,proto3" json:"changeset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullSchemaResponse_ChangesetCommitted) Reset() {
	*x = PullSchemaResponse_ChangesetCommitted{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullSchemaResponse_ChangesetCommitted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullSchemaResponse_ChangesetCommitted) ProtoMessage() {}

func (x *PullSchemaResponse_ChangesetCommitted) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullSchemaResponse_ChangesetCommitted.ProtoReflect.Descriptor instead.
func (*PullSchemaResponse_ChangesetCommitted) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{3, 2}
}

func (x *PullSchemaResponse_ChangesetCommitted) GetChangeset() *v1.Changeset {
	if x != nil {
		return x.Changeset
	}
	return nil
}

// Deployment created is sent when a deployment is new to the listener but is not part of a changeset.
type PullSchemaResponse_DeploymentCreated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Changeset     *string                `protobuf:"bytes,1,opt,name=changeset,proto3,oneof" json:"changeset,omitempty"`
	Schema        *v1.Module             `protobuf:"bytes,2,opt,name=schema,proto3,oneof" json:"schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullSchemaResponse_DeploymentCreated) Reset() {
	*x = PullSchemaResponse_DeploymentCreated{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullSchemaResponse_DeploymentCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullSchemaResponse_DeploymentCreated) ProtoMessage() {}

func (x *PullSchemaResponse_DeploymentCreated) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullSchemaResponse_DeploymentCreated.ProtoReflect.Descriptor instead.
func (*PullSchemaResponse_DeploymentCreated) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{3, 3}
}

func (x *PullSchemaResponse_DeploymentCreated) GetChangeset() string {
	if x != nil && x.Changeset != nil {
		return *x.Changeset
	}
	return ""
}

func (x *PullSchemaResponse_DeploymentCreated) GetSchema() *v1.Module {
	if x != nil {
		return x.Schema
	}
	return nil
}

type PullSchemaResponse_DeploymentUpdated struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Will not be set for builtin modules.
	// optional string key = 1;
	// string module_name = 2;
	// If present, the deployment is not yet canonical as it is currently part of a changeset.
	Changeset     *string    `protobuf:"bytes,1,opt,name=changeset,proto3,oneof" json:"changeset,omitempty"`
	Schema        *v1.Module `protobuf:"bytes,2,opt,name=schema,proto3,oneof" json:"schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullSchemaResponse_DeploymentUpdated) Reset() {
	*x = PullSchemaResponse_DeploymentUpdated{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullSchemaResponse_DeploymentUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullSchemaResponse_DeploymentUpdated) ProtoMessage() {}

func (x *PullSchemaResponse_DeploymentUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullSchemaResponse_DeploymentUpdated.ProtoReflect.Descriptor instead.
func (*PullSchemaResponse_DeploymentUpdated) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{3, 4}
}

func (x *PullSchemaResponse_DeploymentUpdated) GetChangeset() string {
	if x != nil && x.Changeset != nil {
		return *x.Changeset
	}
	return ""
}

func (x *PullSchemaResponse_DeploymentUpdated) GetSchema() *v1.Module {
	if x != nil {
		return x.Schema
	}
	return nil
}

type PullSchemaResponse_DeploymentRemoved struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Will not be set for builtin modules.
	Key        *string `protobuf:"bytes,1,opt,name=key,proto3,oneof" json:"key,omitempty"`
	ModuleName string  `protobuf:"bytes,2,opt,name=module_name,json=moduleName,proto3" json:"module_name,omitempty"`
	// If this is true then the module was removed as well as the deployment.
	ModuleRemoved bool `protobuf:"varint,3,opt,name=module_removed,json=moduleRemoved,proto3" json:"module_removed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullSchemaResponse_DeploymentRemoved) Reset() {
	*x = PullSchemaResponse_DeploymentRemoved{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullSchemaResponse_DeploymentRemoved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullSchemaResponse_DeploymentRemoved) ProtoMessage() {}

func (x *PullSchemaResponse_DeploymentRemoved) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullSchemaResponse_DeploymentRemoved.ProtoReflect.Descriptor instead.
func (*PullSchemaResponse_DeploymentRemoved) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{3, 5}
}

func (x *PullSchemaResponse_DeploymentRemoved) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *PullSchemaResponse_DeploymentRemoved) GetModuleName() string {
	if x != nil {
		return x.ModuleName
	}
	return ""
}

func (x *PullSchemaResponse_DeploymentRemoved) GetModuleRemoved() bool {
	if x != nil {
		return x.ModuleRemoved
	}
	return false
}

var File_xyz_block_ftl_v1_schemaservice_proto protoreflect.FileDescriptor

var file_xyz_block_ftl_v1_schemaservice_proto_rawDesc = []byte{
	0x0a, 0x24, 0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x24, 0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a,
	0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f, 0x76, 0x31,
	0x2f, 0x66, 0x74, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x90,
	0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x42, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74,
	0x6c, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74,
	0x73, 0x22, 0x3c, 0x0a, 0x11, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0xa8, 0x0a, 0x0a, 0x12, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x65, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x10, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x61, 0x0a, 0x10,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0f,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12,
	0x6a, 0x0a, 0x13, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x78,
	0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x75, 0x6c, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x12, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x12, 0x67, 0x0a, 0x12, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x11, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x67, 0x0a, 0x12, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x36, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x11, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x67, 0x0a,
	0x12, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x78, 0x79, 0x7a, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x6c,
	0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x48, 0x00, 0x52, 0x11, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x04, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x92,
	0xf7, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6d, 0x6f, 0x72, 0x65, 0x1a, 0x54, 0x0a, 0x10,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x40, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x65, 0x74, 0x1a, 0x39, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x46,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x56, 0x0a,
	0x12, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x74, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x65, 0x74, 0x1a, 0x8d, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3c,
	0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x48,
	0x01, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x1a, 0x8d, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3c,
	0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x48,
	0x01, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x1a, 0x7a, 0x0a, 0x11, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x15, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6b, 0x65,
	0x79, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x63, 0x0a, 0x1e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x78, 0x79,
	0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22,
	0x21, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x4b, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22,
	0x16, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x52, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x78, 0x79, 0x7a,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x06, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x22, 0x84, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x39, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x37, 0x0a, 0x17, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x65, 0x74, 0x22, 0x8d, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x37,
	0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52,
	0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x22, 0x37, 0x0a, 0x17, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x22, 0x1a, 0x0a,
	0x18, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x0a, 0x16, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65,
	0x74, 0x22, 0x5b, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x65, 0x74, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x22, 0x35,
	0x0a, 0x15, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x65, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x38, 0x0a, 0x18, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a, 0x0a, 0x14, 0x46, 0x61, 0x69, 0x6c, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x17, 0x0a, 0x15, 0x46, 0x61, 0x69, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x50, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x32, 0xac, 0x0a, 0x0a,
	0x0d, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a,
	0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x90, 0x02, 0x01, 0x12, 0x59, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x22, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x78, 0x79,
	0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x03, 0x90, 0x02, 0x01, 0x12, 0x5e, 0x0a, 0x0a, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x12, 0x23, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03,
	0x90, 0x02, 0x01, 0x30, 0x01, 0x12, 0x7e, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x30, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66,
	0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x25, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x78,
	0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x12, 0x28, 0x2e, 0x78,
	0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x69, 0x0a, 0x10, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x65, 0x74, 0x12, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0f,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x12,
	0x28, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x0e, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x12, 0x27, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x11, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x12, 0x2a,
	0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x78, 0x79, 0x7a,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x0d, 0x46, 0x61, 0x69, 0x6c, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x12, 0x26, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x69, 0x6c,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x2e, 0x78, 0x79, 0x7a,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66,
	0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3e, 0x50, 0x01, 0x5a,
	0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x66,
	0x74, 0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x66, 0x74, 0x6c, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_xyz_block_ftl_v1_schemaservice_proto_rawDescOnce sync.Once
	file_xyz_block_ftl_v1_schemaservice_proto_rawDescData = file_xyz_block_ftl_v1_schemaservice_proto_rawDesc
)

func file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP() []byte {
	file_xyz_block_ftl_v1_schemaservice_proto_rawDescOnce.Do(func() {
		file_xyz_block_ftl_v1_schemaservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_xyz_block_ftl_v1_schemaservice_proto_rawDescData)
	})
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescData
}

var file_xyz_block_ftl_v1_schemaservice_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_xyz_block_ftl_v1_schemaservice_proto_goTypes = []any{
	(*GetSchemaRequest)(nil),                      // 0: xyz.block.ftl.v1.GetSchemaRequest
	(*GetSchemaResponse)(nil),                     // 1: xyz.block.ftl.v1.GetSchemaResponse
	(*PullSchemaRequest)(nil),                     // 2: xyz.block.ftl.v1.PullSchemaRequest
	(*PullSchemaResponse)(nil),                    // 3: xyz.block.ftl.v1.PullSchemaResponse
	(*UpdateDeploymentRuntimeRequest)(nil),        // 4: xyz.block.ftl.v1.UpdateDeploymentRuntimeRequest
	(*UpdateDeploymentRuntimeResponse)(nil),       // 5: xyz.block.ftl.v1.UpdateDeploymentRuntimeResponse
	(*UpdateSchemaRequest)(nil),                   // 6: xyz.block.ftl.v1.UpdateSchemaRequest
	(*UpdateSchemaResponse)(nil),                  // 7: xyz.block.ftl.v1.UpdateSchemaResponse
	(*GetDeploymentsRequest)(nil),                 // 8: xyz.block.ftl.v1.GetDeploymentsRequest
	(*GetDeploymentsResponse)(nil),                // 9: xyz.block.ftl.v1.GetDeploymentsResponse
	(*CreateChangesetRequest)(nil),                // 10: xyz.block.ftl.v1.CreateChangesetRequest
	(*CreateChangesetResponse)(nil),               // 11: xyz.block.ftl.v1.CreateChangesetResponse
	(*DeployedSchema)(nil),                        // 12: xyz.block.ftl.v1.DeployedSchema
	(*PrepareChangesetRequest)(nil),               // 13: xyz.block.ftl.v1.PrepareChangesetRequest
	(*PrepareChangesetResponse)(nil),              // 14: xyz.block.ftl.v1.PrepareChangesetResponse
	(*CommitChangesetRequest)(nil),                // 15: xyz.block.ftl.v1.CommitChangesetRequest
	(*CommitChangesetResponse)(nil),               // 16: xyz.block.ftl.v1.CommitChangesetResponse
	(*DrainChangesetRequest)(nil),                 // 17: xyz.block.ftl.v1.DrainChangesetRequest
	(*DrainChangesetResponse)(nil),                // 18: xyz.block.ftl.v1.DrainChangesetResponse
	(*FinalizeChangesetRequest)(nil),              // 19: xyz.block.ftl.v1.FinalizeChangesetRequest
	(*FinalizeChangesetResponse)(nil),             // 20: xyz.block.ftl.v1.FinalizeChangesetResponse
	(*FailChangesetRequest)(nil),                  // 21: xyz.block.ftl.v1.FailChangesetRequest
	(*FailChangesetResponse)(nil),                 // 22: xyz.block.ftl.v1.FailChangesetResponse
	(*GetDeploymentRequest)(nil),                  // 23: xyz.block.ftl.v1.GetDeploymentRequest
	(*GetDeploymentResponse)(nil),                 // 24: xyz.block.ftl.v1.GetDeploymentResponse
	(*PullSchemaResponse_ChangesetCreated)(nil),   // 25: xyz.block.ftl.v1.PullSchemaResponse.ChangesetCreated
	(*PullSchemaResponse_ChangesetFailed)(nil),    // 26: xyz.block.ftl.v1.PullSchemaResponse.ChangesetFailed
	(*PullSchemaResponse_ChangesetCommitted)(nil), // 27: xyz.block.ftl.v1.PullSchemaResponse.ChangesetCommitted
	(*PullSchemaResponse_DeploymentCreated)(nil),  // 28: xyz.block.ftl.v1.PullSchemaResponse.DeploymentCreated
	(*PullSchemaResponse_DeploymentUpdated)(nil),  // 29: xyz.block.ftl.v1.PullSchemaResponse.DeploymentUpdated
	(*PullSchemaResponse_DeploymentRemoved)(nil),  // 30: xyz.block.ftl.v1.PullSchemaResponse.DeploymentRemoved
	(*v1.Schema)(nil),                             // 31: xyz.block.ftl.schema.v1.Schema
	(*v1.Changeset)(nil),                          // 32: xyz.block.ftl.schema.v1.Changeset
	(*v1.ModuleRuntimeEvent)(nil),                 // 33: xyz.block.ftl.schema.v1.ModuleRuntimeEvent
	(*v1.Event)(nil),                              // 34: xyz.block.ftl.schema.v1.Event
	(*v1.Module)(nil),                             // 35: xyz.block.ftl.schema.v1.Module
	(*PingRequest)(nil),                           // 36: xyz.block.ftl.v1.PingRequest
	(*PingResponse)(nil),                          // 37: xyz.block.ftl.v1.PingResponse
}
var file_xyz_block_ftl_v1_schemaservice_proto_depIdxs = []int32{
	31, // 0: xyz.block.ftl.v1.GetSchemaResponse.schema:type_name -> xyz.block.ftl.schema.v1.Schema
	32, // 1: xyz.block.ftl.v1.GetSchemaResponse.changesets:type_name -> xyz.block.ftl.schema.v1.Changeset
	25, // 2: xyz.block.ftl.v1.PullSchemaResponse.changeset_created:type_name -> xyz.block.ftl.v1.PullSchemaResponse.ChangesetCreated
	26, // 3: xyz.block.ftl.v1.PullSchemaResponse.changeset_failed:type_name -> xyz.block.ftl.v1.PullSchemaResponse.ChangesetFailed
	27, // 4: xyz.block.ftl.v1.PullSchemaResponse.changeset_committed:type_name -> xyz.block.ftl.v1.PullSchemaResponse.ChangesetCommitted
	28, // 5: xyz.block.ftl.v1.PullSchemaResponse.deployment_created:type_name -> xyz.block.ftl.v1.PullSchemaResponse.DeploymentCreated
	29, // 6: xyz.block.ftl.v1.PullSchemaResponse.deployment_updated:type_name -> xyz.block.ftl.v1.PullSchemaResponse.DeploymentUpdated
	30, // 7: xyz.block.ftl.v1.PullSchemaResponse.deployment_removed:type_name -> xyz.block.ftl.v1.PullSchemaResponse.DeploymentRemoved
	33, // 8: xyz.block.ftl.v1.UpdateDeploymentRuntimeRequest.event:type_name -> xyz.block.ftl.schema.v1.ModuleRuntimeEvent
	34, // 9: xyz.block.ftl.v1.UpdateSchemaRequest.event:type_name -> xyz.block.ftl.schema.v1.Event
	12, // 10: xyz.block.ftl.v1.GetDeploymentsResponse.schema:type_name -> xyz.block.ftl.v1.DeployedSchema
	35, // 11: xyz.block.ftl.v1.CreateChangesetRequest.modules:type_name -> xyz.block.ftl.schema.v1.Module
	35, // 12: xyz.block.ftl.v1.DeployedSchema.schema:type_name -> xyz.block.ftl.schema.v1.Module
	32, // 13: xyz.block.ftl.v1.CommitChangesetResponse.changeset:type_name -> xyz.block.ftl.schema.v1.Changeset
	35, // 14: xyz.block.ftl.v1.GetDeploymentResponse.schema:type_name -> xyz.block.ftl.schema.v1.Module
	32, // 15: xyz.block.ftl.v1.PullSchemaResponse.ChangesetCreated.changeset:type_name -> xyz.block.ftl.schema.v1.Changeset
	32, // 16: xyz.block.ftl.v1.PullSchemaResponse.ChangesetCommitted.changeset:type_name -> xyz.block.ftl.schema.v1.Changeset
	35, // 17: xyz.block.ftl.v1.PullSchemaResponse.DeploymentCreated.schema:type_name -> xyz.block.ftl.schema.v1.Module
	35, // 18: xyz.block.ftl.v1.PullSchemaResponse.DeploymentUpdated.schema:type_name -> xyz.block.ftl.schema.v1.Module
	36, // 19: xyz.block.ftl.v1.SchemaService.Ping:input_type -> xyz.block.ftl.v1.PingRequest
	0,  // 20: xyz.block.ftl.v1.SchemaService.GetSchema:input_type -> xyz.block.ftl.v1.GetSchemaRequest
	2,  // 21: xyz.block.ftl.v1.SchemaService.PullSchema:input_type -> xyz.block.ftl.v1.PullSchemaRequest
	4,  // 22: xyz.block.ftl.v1.SchemaService.UpdateDeploymentRuntime:input_type -> xyz.block.ftl.v1.UpdateDeploymentRuntimeRequest
	6,  // 23: xyz.block.ftl.v1.SchemaService.UpdateSchema:input_type -> xyz.block.ftl.v1.UpdateSchemaRequest
	8,  // 24: xyz.block.ftl.v1.SchemaService.GetDeployments:input_type -> xyz.block.ftl.v1.GetDeploymentsRequest
	10, // 25: xyz.block.ftl.v1.SchemaService.CreateChangeset:input_type -> xyz.block.ftl.v1.CreateChangesetRequest
	13, // 26: xyz.block.ftl.v1.SchemaService.PrepareChangeset:input_type -> xyz.block.ftl.v1.PrepareChangesetRequest
	15, // 27: xyz.block.ftl.v1.SchemaService.CommitChangeset:input_type -> xyz.block.ftl.v1.CommitChangesetRequest
	17, // 28: xyz.block.ftl.v1.SchemaService.DrainChangeset:input_type -> xyz.block.ftl.v1.DrainChangesetRequest
	19, // 29: xyz.block.ftl.v1.SchemaService.FinalizeChangeset:input_type -> xyz.block.ftl.v1.FinalizeChangesetRequest
	21, // 30: xyz.block.ftl.v1.SchemaService.FailChangeset:input_type -> xyz.block.ftl.v1.FailChangesetRequest
	23, // 31: xyz.block.ftl.v1.SchemaService.GetDeployment:input_type -> xyz.block.ftl.v1.GetDeploymentRequest
	37, // 32: xyz.block.ftl.v1.SchemaService.Ping:output_type -> xyz.block.ftl.v1.PingResponse
	1,  // 33: xyz.block.ftl.v1.SchemaService.GetSchema:output_type -> xyz.block.ftl.v1.GetSchemaResponse
	3,  // 34: xyz.block.ftl.v1.SchemaService.PullSchema:output_type -> xyz.block.ftl.v1.PullSchemaResponse
	5,  // 35: xyz.block.ftl.v1.SchemaService.UpdateDeploymentRuntime:output_type -> xyz.block.ftl.v1.UpdateDeploymentRuntimeResponse
	7,  // 36: xyz.block.ftl.v1.SchemaService.UpdateSchema:output_type -> xyz.block.ftl.v1.UpdateSchemaResponse
	9,  // 37: xyz.block.ftl.v1.SchemaService.GetDeployments:output_type -> xyz.block.ftl.v1.GetDeploymentsResponse
	11, // 38: xyz.block.ftl.v1.SchemaService.CreateChangeset:output_type -> xyz.block.ftl.v1.CreateChangesetResponse
	14, // 39: xyz.block.ftl.v1.SchemaService.PrepareChangeset:output_type -> xyz.block.ftl.v1.PrepareChangesetResponse
	16, // 40: xyz.block.ftl.v1.SchemaService.CommitChangeset:output_type -> xyz.block.ftl.v1.CommitChangesetResponse
	18, // 41: xyz.block.ftl.v1.SchemaService.DrainChangeset:output_type -> xyz.block.ftl.v1.DrainChangesetResponse
	20, // 42: xyz.block.ftl.v1.SchemaService.FinalizeChangeset:output_type -> xyz.block.ftl.v1.FinalizeChangesetResponse
	22, // 43: xyz.block.ftl.v1.SchemaService.FailChangeset:output_type -> xyz.block.ftl.v1.FailChangesetResponse
	24, // 44: xyz.block.ftl.v1.SchemaService.GetDeployment:output_type -> xyz.block.ftl.v1.GetDeploymentResponse
	32, // [32:45] is the sub-list for method output_type
	19, // [19:32] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_xyz_block_ftl_v1_schemaservice_proto_init() }
func file_xyz_block_ftl_v1_schemaservice_proto_init() {
	if File_xyz_block_ftl_v1_schemaservice_proto != nil {
		return
	}
	file_xyz_block_ftl_v1_ftl_proto_init()
	file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[3].OneofWrappers = []any{
		(*PullSchemaResponse_ChangesetCreated_)(nil),
		(*PullSchemaResponse_ChangesetFailed_)(nil),
		(*PullSchemaResponse_ChangesetCommitted_)(nil),
		(*PullSchemaResponse_DeploymentCreated_)(nil),
		(*PullSchemaResponse_DeploymentUpdated_)(nil),
		(*PullSchemaResponse_DeploymentRemoved_)(nil),
	}
	file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[28].OneofWrappers = []any{}
	file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[29].OneofWrappers = []any{}
	file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[30].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_xyz_block_ftl_v1_schemaservice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_xyz_block_ftl_v1_schemaservice_proto_goTypes,
		DependencyIndexes: file_xyz_block_ftl_v1_schemaservice_proto_depIdxs,
		MessageInfos:      file_xyz_block_ftl_v1_schemaservice_proto_msgTypes,
	}.Build()
	File_xyz_block_ftl_v1_schemaservice_proto = out.File
	file_xyz_block_ftl_v1_schemaservice_proto_rawDesc = nil
	file_xyz_block_ftl_v1_schemaservice_proto_goTypes = nil
	file_xyz_block_ftl_v1_schemaservice_proto_depIdxs = nil
}
