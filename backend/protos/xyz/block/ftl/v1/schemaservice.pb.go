// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: xyz/block/ftl/v1/schemaservice.proto

package ftlv1

import (
	v1 "github.com/block/ftl/common/protos/xyz/block/ftl/schema/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetSchemaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSchemaRequest) Reset() {
	*x = GetSchemaRequest{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchemaRequest) ProtoMessage() {}

func (x *GetSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchemaRequest.ProtoReflect.Descriptor instead.
func (*GetSchemaRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{0}
}

type GetSchemaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schema        *v1.Schema             `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	Changesets    []*v1.Changeset        `protobuf:"bytes,2,rep,name=changesets,proto3" json:"changesets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSchemaResponse) Reset() {
	*x = GetSchemaResponse{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchemaResponse) ProtoMessage() {}

func (x *GetSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchemaResponse.ProtoReflect.Descriptor instead.
func (*GetSchemaResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{1}
}

func (x *GetSchemaResponse) GetSchema() *v1.Schema {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *GetSchemaResponse) GetChangesets() []*v1.Changeset {
	if x != nil {
		return x.Changesets
	}
	return nil
}

type PullSchemaRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PullSchemaRequest) Reset() {
	*x = PullSchemaRequest{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullSchemaRequest) ProtoMessage() {}

func (x *PullSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullSchemaRequest.ProtoReflect.Descriptor instead.
func (*PullSchemaRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{2}
}

func (x *PullSchemaRequest) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type PullSchemaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *v1.Notification       `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullSchemaResponse) Reset() {
	*x = PullSchemaResponse{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullSchemaResponse) ProtoMessage() {}

func (x *PullSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullSchemaResponse.ProtoReflect.Descriptor instead.
func (*PullSchemaResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{3}
}

func (x *PullSchemaResponse) GetEvent() *v1.Notification {
	if x != nil {
		return x.Event
	}
	return nil
}

type UpdateDeploymentRuntimeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Changeset     *string                `protobuf:"bytes,1,opt,name=changeset,proto3,oneof" json:"changeset,omitempty"`
	Realm         string                 `protobuf:"bytes,2,opt,name=realm,proto3" json:"realm,omitempty"`
	Update        *v1.RuntimeElement     `protobuf:"bytes,3,opt,name=update,proto3" json:"update,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDeploymentRuntimeRequest) Reset() {
	*x = UpdateDeploymentRuntimeRequest{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDeploymentRuntimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeploymentRuntimeRequest) ProtoMessage() {}

func (x *UpdateDeploymentRuntimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeploymentRuntimeRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeploymentRuntimeRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateDeploymentRuntimeRequest) GetChangeset() string {
	if x != nil && x.Changeset != nil {
		return *x.Changeset
	}
	return ""
}

func (x *UpdateDeploymentRuntimeRequest) GetRealm() string {
	if x != nil {
		return x.Realm
	}
	return ""
}

func (x *UpdateDeploymentRuntimeRequest) GetUpdate() *v1.RuntimeElement {
	if x != nil {
		return x.Update
	}
	return nil
}

type UpdateDeploymentRuntimeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDeploymentRuntimeResponse) Reset() {
	*x = UpdateDeploymentRuntimeResponse{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDeploymentRuntimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeploymentRuntimeResponse) ProtoMessage() {}

func (x *UpdateDeploymentRuntimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeploymentRuntimeResponse.ProtoReflect.Descriptor instead.
func (*UpdateDeploymentRuntimeResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{5}
}

type GetDeploymentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeploymentsRequest) Reset() {
	*x = GetDeploymentsRequest{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeploymentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentsRequest) ProtoMessage() {}

func (x *GetDeploymentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentsRequest.ProtoReflect.Descriptor instead.
func (*GetDeploymentsRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{6}
}

type GetDeploymentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schema        []*DeployedSchema      `protobuf:"bytes,1,rep,name=schema,proto3" json:"schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeploymentsResponse) Reset() {
	*x = GetDeploymentsResponse{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeploymentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentsResponse) ProtoMessage() {}

func (x *GetDeploymentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentsResponse.ProtoReflect.Descriptor instead.
func (*GetDeploymentsResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{7}
}

func (x *GetDeploymentsResponse) GetSchema() []*DeployedSchema {
	if x != nil {
		return x.Schema
	}
	return nil
}

type RealmChange struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The modules to add or update.
	Modules []*v1.Module `protobuf:"bytes,1,rep,name=modules,proto3" json:"modules,omitempty"`
	// The deployments to remove.
	ToRemove      []string `protobuf:"bytes,2,rep,name=to_remove,json=toRemove,proto3" json:"to_remove,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RealmChange) Reset() {
	*x = RealmChange{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RealmChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RealmChange) ProtoMessage() {}

func (x *RealmChange) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RealmChange.ProtoReflect.Descriptor instead.
func (*RealmChange) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{8}
}

func (x *RealmChange) GetModules() []*v1.Module {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *RealmChange) GetToRemove() []string {
	if x != nil {
		return x.ToRemove
	}
	return nil
}

type CreateChangesetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The realms changed in this changeset.
	RealmChanges  []*RealmChange `protobuf:"bytes,1,rep,name=realm_changes,json=realmChanges,proto3" json:"realm_changes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChangesetRequest) Reset() {
	*x = CreateChangesetRequest{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChangesetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChangesetRequest) ProtoMessage() {}

func (x *CreateChangesetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChangesetRequest.ProtoReflect.Descriptor instead.
func (*CreateChangesetRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{9}
}

func (x *CreateChangesetRequest) GetRealmChanges() []*RealmChange {
	if x != nil {
		return x.RealmChanges
	}
	return nil
}

type CreateChangesetResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The changeset key of the newly created changeset.
	Changeset     string `protobuf:"bytes,1,opt,name=changeset,proto3" json:"changeset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChangesetResponse) Reset() {
	*x = CreateChangesetResponse{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChangesetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChangesetResponse) ProtoMessage() {}

func (x *CreateChangesetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChangesetResponse.ProtoReflect.Descriptor instead.
func (*CreateChangesetResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{10}
}

func (x *CreateChangesetResponse) GetChangeset() string {
	if x != nil {
		return x.Changeset
	}
	return ""
}

type DeployedSchema struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeploymentKey string                 `protobuf:"bytes,1,opt,name=deployment_key,json=deploymentKey,proto3" json:"deployment_key,omitempty"`
	Schema        *v1.Module             `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	IsActive      bool                   `protobuf:"varint,3,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeployedSchema) Reset() {
	*x = DeployedSchema{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeployedSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployedSchema) ProtoMessage() {}

func (x *DeployedSchema) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployedSchema.ProtoReflect.Descriptor instead.
func (*DeployedSchema) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{11}
}

func (x *DeployedSchema) GetDeploymentKey() string {
	if x != nil {
		return x.DeploymentKey
	}
	return ""
}

func (x *DeployedSchema) GetSchema() *v1.Module {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *DeployedSchema) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type PrepareChangesetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The changeset key to prepare.
	Changeset     string `protobuf:"bytes,1,opt,name=changeset,proto3" json:"changeset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrepareChangesetRequest) Reset() {
	*x = PrepareChangesetRequest{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareChangesetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareChangesetRequest) ProtoMessage() {}

func (x *PrepareChangesetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareChangesetRequest.ProtoReflect.Descriptor instead.
func (*PrepareChangesetRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{12}
}

func (x *PrepareChangesetRequest) GetChangeset() string {
	if x != nil {
		return x.Changeset
	}
	return ""
}

type PrepareChangesetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrepareChangesetResponse) Reset() {
	*x = PrepareChangesetResponse{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareChangesetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareChangesetResponse) ProtoMessage() {}

func (x *PrepareChangesetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareChangesetResponse.ProtoReflect.Descriptor instead.
func (*PrepareChangesetResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{13}
}

type CommitChangesetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The changeset key to commit.
	Changeset     string `protobuf:"bytes,1,opt,name=changeset,proto3" json:"changeset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitChangesetRequest) Reset() {
	*x = CommitChangesetRequest{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitChangesetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitChangesetRequest) ProtoMessage() {}

func (x *CommitChangesetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitChangesetRequest.ProtoReflect.Descriptor instead.
func (*CommitChangesetRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{14}
}

func (x *CommitChangesetRequest) GetChangeset() string {
	if x != nil {
		return x.Changeset
	}
	return ""
}

type CommitChangesetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Changeset     *v1.Changeset          `protobuf:"bytes,1,opt,name=changeset,proto3" json:"changeset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitChangesetResponse) Reset() {
	*x = CommitChangesetResponse{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitChangesetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitChangesetResponse) ProtoMessage() {}

func (x *CommitChangesetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitChangesetResponse.ProtoReflect.Descriptor instead.
func (*CommitChangesetResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{15}
}

func (x *CommitChangesetResponse) GetChangeset() *v1.Changeset {
	if x != nil {
		return x.Changeset
	}
	return nil
}

type DrainChangesetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The changeset key to commit.
	Changeset     string `protobuf:"bytes,1,opt,name=changeset,proto3" json:"changeset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DrainChangesetRequest) Reset() {
	*x = DrainChangesetRequest{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DrainChangesetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrainChangesetRequest) ProtoMessage() {}

func (x *DrainChangesetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrainChangesetRequest.ProtoReflect.Descriptor instead.
func (*DrainChangesetRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{16}
}

func (x *DrainChangesetRequest) GetChangeset() string {
	if x != nil {
		return x.Changeset
	}
	return ""
}

type DrainChangesetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DrainChangesetResponse) Reset() {
	*x = DrainChangesetResponse{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DrainChangesetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrainChangesetResponse) ProtoMessage() {}

func (x *DrainChangesetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrainChangesetResponse.ProtoReflect.Descriptor instead.
func (*DrainChangesetResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{17}
}

type FinalizeChangesetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The changeset key to commit.
	Changeset     string `protobuf:"bytes,1,opt,name=changeset,proto3" json:"changeset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeChangesetRequest) Reset() {
	*x = FinalizeChangesetRequest{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeChangesetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeChangesetRequest) ProtoMessage() {}

func (x *FinalizeChangesetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeChangesetRequest.ProtoReflect.Descriptor instead.
func (*FinalizeChangesetRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{18}
}

func (x *FinalizeChangesetRequest) GetChangeset() string {
	if x != nil {
		return x.Changeset
	}
	return ""
}

type FinalizeChangesetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeChangesetResponse) Reset() {
	*x = FinalizeChangesetResponse{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeChangesetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeChangesetResponse) ProtoMessage() {}

func (x *FinalizeChangesetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeChangesetResponse.ProtoReflect.Descriptor instead.
func (*FinalizeChangesetResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{19}
}

type FailChangesetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The changeset key to fail.
	Changeset     string `protobuf:"bytes,1,opt,name=changeset,proto3" json:"changeset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FailChangesetRequest) Reset() {
	*x = FailChangesetRequest{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FailChangesetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailChangesetRequest) ProtoMessage() {}

func (x *FailChangesetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailChangesetRequest.ProtoReflect.Descriptor instead.
func (*FailChangesetRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{20}
}

func (x *FailChangesetRequest) GetChangeset() string {
	if x != nil {
		return x.Changeset
	}
	return ""
}

type FailChangesetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FailChangesetResponse) Reset() {
	*x = FailChangesetResponse{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FailChangesetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailChangesetResponse) ProtoMessage() {}

func (x *FailChangesetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailChangesetResponse.ProtoReflect.Descriptor instead.
func (*FailChangesetResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{21}
}

type RollbackChangesetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The changeset key to fail.
	Changeset     string `protobuf:"bytes,1,opt,name=changeset,proto3" json:"changeset,omitempty"`
	Error         string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollbackChangesetRequest) Reset() {
	*x = RollbackChangesetRequest{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackChangesetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackChangesetRequest) ProtoMessage() {}

func (x *RollbackChangesetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackChangesetRequest.ProtoReflect.Descriptor instead.
func (*RollbackChangesetRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{22}
}

func (x *RollbackChangesetRequest) GetChangeset() string {
	if x != nil {
		return x.Changeset
	}
	return ""
}

func (x *RollbackChangesetRequest) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type RollbackChangesetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Changeset     *v1.Changeset          `protobuf:"bytes,1,opt,name=changeset,proto3" json:"changeset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollbackChangesetResponse) Reset() {
	*x = RollbackChangesetResponse{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackChangesetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackChangesetResponse) ProtoMessage() {}

func (x *RollbackChangesetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackChangesetResponse.ProtoReflect.Descriptor instead.
func (*RollbackChangesetResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{23}
}

func (x *RollbackChangesetResponse) GetChangeset() *v1.Changeset {
	if x != nil {
		return x.Changeset
	}
	return nil
}

type GetDeploymentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeploymentKey string                 `protobuf:"bytes,1,opt,name=deployment_key,json=deploymentKey,proto3" json:"deployment_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeploymentRequest) Reset() {
	*x = GetDeploymentRequest{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentRequest) ProtoMessage() {}

func (x *GetDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentRequest.ProtoReflect.Descriptor instead.
func (*GetDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{24}
}

func (x *GetDeploymentRequest) GetDeploymentKey() string {
	if x != nil {
		return x.DeploymentKey
	}
	return ""
}

type GetDeploymentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schema        *v1.Module             `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeploymentResponse) Reset() {
	*x = GetDeploymentResponse{}
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeploymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentResponse) ProtoMessage() {}

func (x *GetDeploymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentResponse.ProtoReflect.Descriptor instead.
func (*GetDeploymentResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP(), []int{25}
}

func (x *GetDeploymentResponse) GetSchema() *v1.Module {
	if x != nil {
		return x.Schema
	}
	return nil
}

var File_xyz_block_ftl_v1_schemaservice_proto protoreflect.FileDescriptor

var file_xyz_block_ftl_v1_schemaservice_proto_rawDesc = string([]byte{
	0x0a, 0x24, 0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x24, 0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a,
	0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f, 0x76, 0x31,
	0x2f, 0x66, 0x74, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x90,
	0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x42, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74,
	0x6c, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74,
	0x73, 0x22, 0x3c, 0x0a, 0x11, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x51, 0x0a, 0x12, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x22, 0xa8, 0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x6c,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x12, 0x3f,
	0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x22, 0x21, 0x0a,
	0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x52, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x65, 0x0a,
	0x0b, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x07,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x07,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x5f, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x22, 0x5c, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42,
	0x0a, 0x0d, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x22, 0x37, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x22, 0x8d, 0x01, 0x0a, 0x0e,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x25,
	0x0a, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x37, 0x0a, 0x17, 0x50,
	0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x65, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x36, 0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x22, 0x5b, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x65, 0x74, 0x22, 0x35, 0x0a, 0x15, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x22, 0x18, 0x0a, 0x16,
	0x44, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x0a, 0x18, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74,
	0x22, 0x1b, 0x0a, 0x19, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x0a,
	0x14, 0x46, 0x61, 0x69, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x65, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x46, 0x61, 0x69, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4e, 0x0a, 0x18,
	0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5d, 0x0a, 0x19,
	0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x78,
	0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x22, 0x3d, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x50, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x32, 0xbb, 0x0a, 0x0a,
	0x0d, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a,
	0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x90, 0x02, 0x01, 0x12, 0x59, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x22, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x78, 0x79,
	0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x03, 0x90, 0x02, 0x01, 0x12, 0x5e, 0x0a, 0x0a, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x12, 0x23, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03,
	0x90, 0x02, 0x01, 0x30, 0x01, 0x12, 0x7e, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x30, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66,
	0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x12, 0x28, 0x2e,
	0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x69, 0x0a, 0x10, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x12, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a,
	0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74,
	0x12, 0x28, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x78, 0x79, 0x7a,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x0e, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x12, 0x27, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x61, 0x69, 0x6e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x11, 0x46, 0x69,
	0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x12,
	0x2a, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x78, 0x79,
	0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x11, 0x52, 0x6f, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x12, 0x2a, 0x2e,
	0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x78, 0x79, 0x7a, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x0d, 0x46, 0x61, 0x69, 0x6c, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x12, 0x26, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x2e, 0x78, 0x79, 0x7a, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3e, 0x50, 0x01, 0x5a, 0x3a,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x2f, 0x66, 0x74, 0x6c, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x74,
	0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x66, 0x74, 0x6c, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_xyz_block_ftl_v1_schemaservice_proto_rawDescOnce sync.Once
	file_xyz_block_ftl_v1_schemaservice_proto_rawDescData []byte
)

func file_xyz_block_ftl_v1_schemaservice_proto_rawDescGZIP() []byte {
	file_xyz_block_ftl_v1_schemaservice_proto_rawDescOnce.Do(func() {
		file_xyz_block_ftl_v1_schemaservice_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_xyz_block_ftl_v1_schemaservice_proto_rawDesc), len(file_xyz_block_ftl_v1_schemaservice_proto_rawDesc)))
	})
	return file_xyz_block_ftl_v1_schemaservice_proto_rawDescData
}

var file_xyz_block_ftl_v1_schemaservice_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_xyz_block_ftl_v1_schemaservice_proto_goTypes = []any{
	(*GetSchemaRequest)(nil),                // 0: xyz.block.ftl.v1.GetSchemaRequest
	(*GetSchemaResponse)(nil),               // 1: xyz.block.ftl.v1.GetSchemaResponse
	(*PullSchemaRequest)(nil),               // 2: xyz.block.ftl.v1.PullSchemaRequest
	(*PullSchemaResponse)(nil),              // 3: xyz.block.ftl.v1.PullSchemaResponse
	(*UpdateDeploymentRuntimeRequest)(nil),  // 4: xyz.block.ftl.v1.UpdateDeploymentRuntimeRequest
	(*UpdateDeploymentRuntimeResponse)(nil), // 5: xyz.block.ftl.v1.UpdateDeploymentRuntimeResponse
	(*GetDeploymentsRequest)(nil),           // 6: xyz.block.ftl.v1.GetDeploymentsRequest
	(*GetDeploymentsResponse)(nil),          // 7: xyz.block.ftl.v1.GetDeploymentsResponse
	(*RealmChange)(nil),                     // 8: xyz.block.ftl.v1.RealmChange
	(*CreateChangesetRequest)(nil),          // 9: xyz.block.ftl.v1.CreateChangesetRequest
	(*CreateChangesetResponse)(nil),         // 10: xyz.block.ftl.v1.CreateChangesetResponse
	(*DeployedSchema)(nil),                  // 11: xyz.block.ftl.v1.DeployedSchema
	(*PrepareChangesetRequest)(nil),         // 12: xyz.block.ftl.v1.PrepareChangesetRequest
	(*PrepareChangesetResponse)(nil),        // 13: xyz.block.ftl.v1.PrepareChangesetResponse
	(*CommitChangesetRequest)(nil),          // 14: xyz.block.ftl.v1.CommitChangesetRequest
	(*CommitChangesetResponse)(nil),         // 15: xyz.block.ftl.v1.CommitChangesetResponse
	(*DrainChangesetRequest)(nil),           // 16: xyz.block.ftl.v1.DrainChangesetRequest
	(*DrainChangesetResponse)(nil),          // 17: xyz.block.ftl.v1.DrainChangesetResponse
	(*FinalizeChangesetRequest)(nil),        // 18: xyz.block.ftl.v1.FinalizeChangesetRequest
	(*FinalizeChangesetResponse)(nil),       // 19: xyz.block.ftl.v1.FinalizeChangesetResponse
	(*FailChangesetRequest)(nil),            // 20: xyz.block.ftl.v1.FailChangesetRequest
	(*FailChangesetResponse)(nil),           // 21: xyz.block.ftl.v1.FailChangesetResponse
	(*RollbackChangesetRequest)(nil),        // 22: xyz.block.ftl.v1.RollbackChangesetRequest
	(*RollbackChangesetResponse)(nil),       // 23: xyz.block.ftl.v1.RollbackChangesetResponse
	(*GetDeploymentRequest)(nil),            // 24: xyz.block.ftl.v1.GetDeploymentRequest
	(*GetDeploymentResponse)(nil),           // 25: xyz.block.ftl.v1.GetDeploymentResponse
	(*v1.Schema)(nil),                       // 26: xyz.block.ftl.schema.v1.Schema
	(*v1.Changeset)(nil),                    // 27: xyz.block.ftl.schema.v1.Changeset
	(*v1.Notification)(nil),                 // 28: xyz.block.ftl.schema.v1.Notification
	(*v1.RuntimeElement)(nil),               // 29: xyz.block.ftl.schema.v1.RuntimeElement
	(*v1.Module)(nil),                       // 30: xyz.block.ftl.schema.v1.Module
	(*PingRequest)(nil),                     // 31: xyz.block.ftl.v1.PingRequest
	(*PingResponse)(nil),                    // 32: xyz.block.ftl.v1.PingResponse
}
var file_xyz_block_ftl_v1_schemaservice_proto_depIdxs = []int32{
	26, // 0: xyz.block.ftl.v1.GetSchemaResponse.schema:type_name -> xyz.block.ftl.schema.v1.Schema
	27, // 1: xyz.block.ftl.v1.GetSchemaResponse.changesets:type_name -> xyz.block.ftl.schema.v1.Changeset
	28, // 2: xyz.block.ftl.v1.PullSchemaResponse.event:type_name -> xyz.block.ftl.schema.v1.Notification
	29, // 3: xyz.block.ftl.v1.UpdateDeploymentRuntimeRequest.update:type_name -> xyz.block.ftl.schema.v1.RuntimeElement
	11, // 4: xyz.block.ftl.v1.GetDeploymentsResponse.schema:type_name -> xyz.block.ftl.v1.DeployedSchema
	30, // 5: xyz.block.ftl.v1.RealmChange.modules:type_name -> xyz.block.ftl.schema.v1.Module
	8,  // 6: xyz.block.ftl.v1.CreateChangesetRequest.realm_changes:type_name -> xyz.block.ftl.v1.RealmChange
	30, // 7: xyz.block.ftl.v1.DeployedSchema.schema:type_name -> xyz.block.ftl.schema.v1.Module
	27, // 8: xyz.block.ftl.v1.CommitChangesetResponse.changeset:type_name -> xyz.block.ftl.schema.v1.Changeset
	27, // 9: xyz.block.ftl.v1.RollbackChangesetResponse.changeset:type_name -> xyz.block.ftl.schema.v1.Changeset
	30, // 10: xyz.block.ftl.v1.GetDeploymentResponse.schema:type_name -> xyz.block.ftl.schema.v1.Module
	31, // 11: xyz.block.ftl.v1.SchemaService.Ping:input_type -> xyz.block.ftl.v1.PingRequest
	0,  // 12: xyz.block.ftl.v1.SchemaService.GetSchema:input_type -> xyz.block.ftl.v1.GetSchemaRequest
	2,  // 13: xyz.block.ftl.v1.SchemaService.PullSchema:input_type -> xyz.block.ftl.v1.PullSchemaRequest
	4,  // 14: xyz.block.ftl.v1.SchemaService.UpdateDeploymentRuntime:input_type -> xyz.block.ftl.v1.UpdateDeploymentRuntimeRequest
	6,  // 15: xyz.block.ftl.v1.SchemaService.GetDeployments:input_type -> xyz.block.ftl.v1.GetDeploymentsRequest
	9,  // 16: xyz.block.ftl.v1.SchemaService.CreateChangeset:input_type -> xyz.block.ftl.v1.CreateChangesetRequest
	12, // 17: xyz.block.ftl.v1.SchemaService.PrepareChangeset:input_type -> xyz.block.ftl.v1.PrepareChangesetRequest
	14, // 18: xyz.block.ftl.v1.SchemaService.CommitChangeset:input_type -> xyz.block.ftl.v1.CommitChangesetRequest
	16, // 19: xyz.block.ftl.v1.SchemaService.DrainChangeset:input_type -> xyz.block.ftl.v1.DrainChangesetRequest
	18, // 20: xyz.block.ftl.v1.SchemaService.FinalizeChangeset:input_type -> xyz.block.ftl.v1.FinalizeChangesetRequest
	22, // 21: xyz.block.ftl.v1.SchemaService.RollbackChangeset:input_type -> xyz.block.ftl.v1.RollbackChangesetRequest
	20, // 22: xyz.block.ftl.v1.SchemaService.FailChangeset:input_type -> xyz.block.ftl.v1.FailChangesetRequest
	24, // 23: xyz.block.ftl.v1.SchemaService.GetDeployment:input_type -> xyz.block.ftl.v1.GetDeploymentRequest
	32, // 24: xyz.block.ftl.v1.SchemaService.Ping:output_type -> xyz.block.ftl.v1.PingResponse
	1,  // 25: xyz.block.ftl.v1.SchemaService.GetSchema:output_type -> xyz.block.ftl.v1.GetSchemaResponse
	3,  // 26: xyz.block.ftl.v1.SchemaService.PullSchema:output_type -> xyz.block.ftl.v1.PullSchemaResponse
	5,  // 27: xyz.block.ftl.v1.SchemaService.UpdateDeploymentRuntime:output_type -> xyz.block.ftl.v1.UpdateDeploymentRuntimeResponse
	7,  // 28: xyz.block.ftl.v1.SchemaService.GetDeployments:output_type -> xyz.block.ftl.v1.GetDeploymentsResponse
	10, // 29: xyz.block.ftl.v1.SchemaService.CreateChangeset:output_type -> xyz.block.ftl.v1.CreateChangesetResponse
	13, // 30: xyz.block.ftl.v1.SchemaService.PrepareChangeset:output_type -> xyz.block.ftl.v1.PrepareChangesetResponse
	15, // 31: xyz.block.ftl.v1.SchemaService.CommitChangeset:output_type -> xyz.block.ftl.v1.CommitChangesetResponse
	17, // 32: xyz.block.ftl.v1.SchemaService.DrainChangeset:output_type -> xyz.block.ftl.v1.DrainChangesetResponse
	19, // 33: xyz.block.ftl.v1.SchemaService.FinalizeChangeset:output_type -> xyz.block.ftl.v1.FinalizeChangesetResponse
	23, // 34: xyz.block.ftl.v1.SchemaService.RollbackChangeset:output_type -> xyz.block.ftl.v1.RollbackChangesetResponse
	21, // 35: xyz.block.ftl.v1.SchemaService.FailChangeset:output_type -> xyz.block.ftl.v1.FailChangesetResponse
	25, // 36: xyz.block.ftl.v1.SchemaService.GetDeployment:output_type -> xyz.block.ftl.v1.GetDeploymentResponse
	24, // [24:37] is the sub-list for method output_type
	11, // [11:24] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_xyz_block_ftl_v1_schemaservice_proto_init() }
func file_xyz_block_ftl_v1_schemaservice_proto_init() {
	if File_xyz_block_ftl_v1_schemaservice_proto != nil {
		return
	}
	file_xyz_block_ftl_v1_ftl_proto_init()
	file_xyz_block_ftl_v1_schemaservice_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_xyz_block_ftl_v1_schemaservice_proto_rawDesc), len(file_xyz_block_ftl_v1_schemaservice_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_xyz_block_ftl_v1_schemaservice_proto_goTypes,
		DependencyIndexes: file_xyz_block_ftl_v1_schemaservice_proto_depIdxs,
		MessageInfos:      file_xyz_block_ftl_v1_schemaservice_proto_msgTypes,
	}.Build()
	File_xyz_block_ftl_v1_schemaservice_proto = out.File
	file_xyz_block_ftl_v1_schemaservice_proto_goTypes = nil
	file_xyz_block_ftl_v1_schemaservice_proto_depIdxs = nil
}
