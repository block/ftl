// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: xyz/block/ftl/v1/controller.proto

package ftlv1

import (
	v1 "github.com/block/ftl/common/protos/xyz/block/ftl/schema/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetDeploymentContextResponse_DbType int32

const (
	GetDeploymentContextResponse_DB_TYPE_UNSPECIFIED GetDeploymentContextResponse_DbType = 0
	GetDeploymentContextResponse_DB_TYPE_POSTGRES    GetDeploymentContextResponse_DbType = 1
	GetDeploymentContextResponse_DB_TYPE_MYSQL       GetDeploymentContextResponse_DbType = 2
)

// Enum value maps for GetDeploymentContextResponse_DbType.
var (
	GetDeploymentContextResponse_DbType_name = map[int32]string{
		0: "DB_TYPE_UNSPECIFIED",
		1: "DB_TYPE_POSTGRES",
		2: "DB_TYPE_MYSQL",
	}
	GetDeploymentContextResponse_DbType_value = map[string]int32{
		"DB_TYPE_UNSPECIFIED": 0,
		"DB_TYPE_POSTGRES":    1,
		"DB_TYPE_MYSQL":       2,
	}
)

func (x GetDeploymentContextResponse_DbType) Enum() *GetDeploymentContextResponse_DbType {
	p := new(GetDeploymentContextResponse_DbType)
	*p = x
	return p
}

func (x GetDeploymentContextResponse_DbType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetDeploymentContextResponse_DbType) Descriptor() protoreflect.EnumDescriptor {
	return file_xyz_block_ftl_v1_controller_proto_enumTypes[0].Descriptor()
}

func (GetDeploymentContextResponse_DbType) Type() protoreflect.EnumType {
	return &file_xyz_block_ftl_v1_controller_proto_enumTypes[0]
}

func (x GetDeploymentContextResponse_DbType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetDeploymentContextResponse_DbType.Descriptor instead.
func (GetDeploymentContextResponse_DbType) EnumDescriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_controller_proto_rawDescGZIP(), []int{7, 0}
}

type RegisterRunnerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Endpoint      string                 `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Deployment    string                 `protobuf:"bytes,3,opt,name=deployment,proto3" json:"deployment,omitempty"`
	Labels        *structpb.Struct       `protobuf:"bytes,5,opt,name=labels,proto3" json:"labels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRunnerRequest) Reset() {
	*x = RegisterRunnerRequest{}
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRunnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRunnerRequest) ProtoMessage() {}

func (x *RegisterRunnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRunnerRequest.ProtoReflect.Descriptor instead.
func (*RegisterRunnerRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_controller_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterRunnerRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RegisterRunnerRequest) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *RegisterRunnerRequest) GetDeployment() string {
	if x != nil {
		return x.Deployment
	}
	return ""
}

func (x *RegisterRunnerRequest) GetLabels() *structpb.Struct {
	if x != nil {
		return x.Labels
	}
	return nil
}

type RegisterRunnerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRunnerResponse) Reset() {
	*x = RegisterRunnerResponse{}
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRunnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRunnerResponse) ProtoMessage() {}

func (x *RegisterRunnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRunnerResponse.ProtoReflect.Descriptor instead.
func (*RegisterRunnerResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_controller_proto_rawDescGZIP(), []int{1}
}

type StatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_controller_proto_rawDescGZIP(), []int{2}
}

type StatusResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Controllers   []*StatusResponse_Controller `protobuf:"bytes,1,rep,name=controllers,proto3" json:"controllers,omitempty"`
	Runners       []*StatusResponse_Runner     `protobuf:"bytes,2,rep,name=runners,proto3" json:"runners,omitempty"`
	Deployments   []*StatusResponse_Deployment `protobuf:"bytes,3,rep,name=deployments,proto3" json:"deployments,omitempty"`
	Routes        []*StatusResponse_Route      `protobuf:"bytes,5,rep,name=routes,proto3" json:"routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_controller_proto_rawDescGZIP(), []int{3}
}

func (x *StatusResponse) GetControllers() []*StatusResponse_Controller {
	if x != nil {
		return x.Controllers
	}
	return nil
}

func (x *StatusResponse) GetRunners() []*StatusResponse_Runner {
	if x != nil {
		return x.Runners
	}
	return nil
}

func (x *StatusResponse) GetDeployments() []*StatusResponse_Deployment {
	if x != nil {
		return x.Deployments
	}
	return nil
}

func (x *StatusResponse) GetRoutes() []*StatusResponse_Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

type ProcessListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessListRequest) Reset() {
	*x = ProcessListRequest{}
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessListRequest) ProtoMessage() {}

func (x *ProcessListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessListRequest.ProtoReflect.Descriptor instead.
func (*ProcessListRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_controller_proto_rawDescGZIP(), []int{4}
}

type ProcessListResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Processes     []*ProcessListResponse_Process `protobuf:"bytes,1,rep,name=processes,proto3" json:"processes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessListResponse) Reset() {
	*x = ProcessListResponse{}
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessListResponse) ProtoMessage() {}

func (x *ProcessListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessListResponse.ProtoReflect.Descriptor instead.
func (*ProcessListResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_controller_proto_rawDescGZIP(), []int{5}
}

func (x *ProcessListResponse) GetProcesses() []*ProcessListResponse_Process {
	if x != nil {
		return x.Processes
	}
	return nil
}

type GetDeploymentContextRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Deployment    string                 `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeploymentContextRequest) Reset() {
	*x = GetDeploymentContextRequest{}
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeploymentContextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentContextRequest) ProtoMessage() {}

func (x *GetDeploymentContextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentContextRequest.ProtoReflect.Descriptor instead.
func (*GetDeploymentContextRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_controller_proto_rawDescGZIP(), []int{6}
}

func (x *GetDeploymentContextRequest) GetDeployment() string {
	if x != nil {
		return x.Deployment
	}
	return ""
}

type GetDeploymentContextResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Module        string                                `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	Deployment    string                                `protobuf:"bytes,2,opt,name=deployment,proto3" json:"deployment,omitempty"`
	Configs       map[string][]byte                     `protobuf:"bytes,3,rep,name=configs,proto3" json:"configs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Secrets       map[string][]byte                     `protobuf:"bytes,4,rep,name=secrets,proto3" json:"secrets,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Databases     []*GetDeploymentContextResponse_DSN   `protobuf:"bytes,5,rep,name=databases,proto3" json:"databases,omitempty"`
	Routes        []*GetDeploymentContextResponse_Route `protobuf:"bytes,6,rep,name=routes,proto3" json:"routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeploymentContextResponse) Reset() {
	*x = GetDeploymentContextResponse{}
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeploymentContextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentContextResponse) ProtoMessage() {}

func (x *GetDeploymentContextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentContextResponse.ProtoReflect.Descriptor instead.
func (*GetDeploymentContextResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_controller_proto_rawDescGZIP(), []int{7}
}

func (x *GetDeploymentContextResponse) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *GetDeploymentContextResponse) GetDeployment() string {
	if x != nil {
		return x.Deployment
	}
	return ""
}

func (x *GetDeploymentContextResponse) GetConfigs() map[string][]byte {
	if x != nil {
		return x.Configs
	}
	return nil
}

func (x *GetDeploymentContextResponse) GetSecrets() map[string][]byte {
	if x != nil {
		return x.Secrets
	}
	return nil
}

func (x *GetDeploymentContextResponse) GetDatabases() []*GetDeploymentContextResponse_DSN {
	if x != nil {
		return x.Databases
	}
	return nil
}

func (x *GetDeploymentContextResponse) GetRoutes() []*GetDeploymentContextResponse_Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

type StatusResponse_Controller struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Endpoint      string                 `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse_Controller) Reset() {
	*x = StatusResponse_Controller{}
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse_Controller) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse_Controller) ProtoMessage() {}

func (x *StatusResponse_Controller) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse_Controller.ProtoReflect.Descriptor instead.
func (*StatusResponse_Controller) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_controller_proto_rawDescGZIP(), []int{3, 0}
}

func (x *StatusResponse_Controller) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StatusResponse_Controller) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *StatusResponse_Controller) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type StatusResponse_Runner struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Endpoint      string                 `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Deployment    *string                `protobuf:"bytes,3,opt,name=deployment,proto3,oneof" json:"deployment,omitempty"`
	Labels        *structpb.Struct       `protobuf:"bytes,4,opt,name=labels,proto3" json:"labels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse_Runner) Reset() {
	*x = StatusResponse_Runner{}
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse_Runner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse_Runner) ProtoMessage() {}

func (x *StatusResponse_Runner) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse_Runner.ProtoReflect.Descriptor instead.
func (*StatusResponse_Runner) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_controller_proto_rawDescGZIP(), []int{3, 1}
}

func (x *StatusResponse_Runner) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StatusResponse_Runner) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *StatusResponse_Runner) GetDeployment() string {
	if x != nil && x.Deployment != nil {
		return *x.Deployment
	}
	return ""
}

func (x *StatusResponse_Runner) GetLabels() *structpb.Struct {
	if x != nil {
		return x.Labels
	}
	return nil
}

type StatusResponse_Deployment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Language      string                 `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	MinReplicas   int32                  `protobuf:"varint,4,opt,name=min_replicas,json=minReplicas,proto3" json:"min_replicas,omitempty"`
	Replicas      int32                  `protobuf:"varint,7,opt,name=replicas,proto3" json:"replicas,omitempty"`
	Labels        *structpb.Struct       `protobuf:"bytes,5,opt,name=labels,proto3" json:"labels,omitempty"`
	Schema        *v1.Module             `protobuf:"bytes,6,opt,name=schema,proto3" json:"schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse_Deployment) Reset() {
	*x = StatusResponse_Deployment{}
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse_Deployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse_Deployment) ProtoMessage() {}

func (x *StatusResponse_Deployment) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse_Deployment.ProtoReflect.Descriptor instead.
func (*StatusResponse_Deployment) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_controller_proto_rawDescGZIP(), []int{3, 2}
}

func (x *StatusResponse_Deployment) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StatusResponse_Deployment) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *StatusResponse_Deployment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StatusResponse_Deployment) GetMinReplicas() int32 {
	if x != nil {
		return x.MinReplicas
	}
	return 0
}

func (x *StatusResponse_Deployment) GetReplicas() int32 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *StatusResponse_Deployment) GetLabels() *structpb.Struct {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *StatusResponse_Deployment) GetSchema() *v1.Module {
	if x != nil {
		return x.Schema
	}
	return nil
}

type StatusResponse_Route struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Module        string                 `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	Deployment    string                 `protobuf:"bytes,2,opt,name=deployment,proto3" json:"deployment,omitempty"`
	Endpoint      string                 `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse_Route) Reset() {
	*x = StatusResponse_Route{}
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse_Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse_Route) ProtoMessage() {}

func (x *StatusResponse_Route) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse_Route.ProtoReflect.Descriptor instead.
func (*StatusResponse_Route) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_controller_proto_rawDescGZIP(), []int{3, 3}
}

func (x *StatusResponse_Route) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *StatusResponse_Route) GetDeployment() string {
	if x != nil {
		return x.Deployment
	}
	return ""
}

func (x *StatusResponse_Route) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

type ProcessListResponse_ProcessRunner struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Endpoint      string                 `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Labels        *structpb.Struct       `protobuf:"bytes,3,opt,name=labels,proto3" json:"labels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessListResponse_ProcessRunner) Reset() {
	*x = ProcessListResponse_ProcessRunner{}
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessListResponse_ProcessRunner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessListResponse_ProcessRunner) ProtoMessage() {}

func (x *ProcessListResponse_ProcessRunner) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessListResponse_ProcessRunner.ProtoReflect.Descriptor instead.
func (*ProcessListResponse_ProcessRunner) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_controller_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ProcessListResponse_ProcessRunner) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ProcessListResponse_ProcessRunner) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *ProcessListResponse_ProcessRunner) GetLabels() *structpb.Struct {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ProcessListResponse_Process struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Deployment    string                             `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	MinReplicas   int32                              `protobuf:"varint,2,opt,name=min_replicas,json=minReplicas,proto3" json:"min_replicas,omitempty"`
	Labels        *structpb.Struct                   `protobuf:"bytes,3,opt,name=labels,proto3" json:"labels,omitempty"`
	Runner        *ProcessListResponse_ProcessRunner `protobuf:"bytes,4,opt,name=runner,proto3,oneof" json:"runner,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessListResponse_Process) Reset() {
	*x = ProcessListResponse_Process{}
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessListResponse_Process) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessListResponse_Process) ProtoMessage() {}

func (x *ProcessListResponse_Process) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessListResponse_Process.ProtoReflect.Descriptor instead.
func (*ProcessListResponse_Process) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_controller_proto_rawDescGZIP(), []int{5, 1}
}

func (x *ProcessListResponse_Process) GetDeployment() string {
	if x != nil {
		return x.Deployment
	}
	return ""
}

func (x *ProcessListResponse_Process) GetMinReplicas() int32 {
	if x != nil {
		return x.MinReplicas
	}
	return 0
}

func (x *ProcessListResponse_Process) GetLabels() *structpb.Struct {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ProcessListResponse_Process) GetRunner() *ProcessListResponse_ProcessRunner {
	if x != nil {
		return x.Runner
	}
	return nil
}

type GetDeploymentContextResponse_DSN struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Name          string                              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          GetDeploymentContextResponse_DbType `protobuf:"varint,2,opt,name=type,proto3,enum=xyz.block.ftl.v1.GetDeploymentContextResponse_DbType" json:"type,omitempty"`
	Dsn           string                              `protobuf:"bytes,3,opt,name=dsn,proto3" json:"dsn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeploymentContextResponse_DSN) Reset() {
	*x = GetDeploymentContextResponse_DSN{}
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeploymentContextResponse_DSN) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentContextResponse_DSN) ProtoMessage() {}

func (x *GetDeploymentContextResponse_DSN) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentContextResponse_DSN.ProtoReflect.Descriptor instead.
func (*GetDeploymentContextResponse_DSN) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_controller_proto_rawDescGZIP(), []int{7, 0}
}

func (x *GetDeploymentContextResponse_DSN) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDeploymentContextResponse_DSN) GetType() GetDeploymentContextResponse_DbType {
	if x != nil {
		return x.Type
	}
	return GetDeploymentContextResponse_DB_TYPE_UNSPECIFIED
}

func (x *GetDeploymentContextResponse_DSN) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

type GetDeploymentContextResponse_Route struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Deployment    string                 `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	Uri           string                 `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeploymentContextResponse_Route) Reset() {
	*x = GetDeploymentContextResponse_Route{}
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeploymentContextResponse_Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentContextResponse_Route) ProtoMessage() {}

func (x *GetDeploymentContextResponse_Route) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_controller_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentContextResponse_Route.ProtoReflect.Descriptor instead.
func (*GetDeploymentContextResponse_Route) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_controller_proto_rawDescGZIP(), []int{7, 1}
}

func (x *GetDeploymentContextResponse_Route) GetDeployment() string {
	if x != nil {
		return x.Deployment
	}
	return ""
}

func (x *GetDeploymentContextResponse_Route) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

var File_xyz_block_ftl_v1_controller_proto protoreflect.FileDescriptor

var file_xyz_block_ftl_v1_controller_proto_rawDesc = string([]byte{
	0x0a, 0x21, 0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x10, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66,
	0x74, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x66,
	0x74, 0x6c, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x78, 0x79, 0x7a, 0x2f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x74, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0x18,
	0x0a, 0x16, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xfc, 0x06, 0x0a, 0x0e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x41, 0x0a, 0x07, 0x72,
	0x75, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x78,
	0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52,
	0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x4d,
	0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3e, 0x0a,
	0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x54, 0x0a,
	0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x1a, 0x9b, 0x01, 0x0a, 0x06, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0a,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x2f, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x1a, 0xf7, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x73, 0x12, 0x2f, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66,
	0x74, 0x6c, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x1a, 0x5b, 0x0a, 0x05, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xaf,
	0x03, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x78, 0x79, 0x7a, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x1a, 0x6e, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x75,
	0x6e, 0x6e, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x1a, 0xda, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x12, 0x50, 0x0a, 0x06, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x72, 0x75, 0x6e, 0x6e,
	0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72,
	0x22, 0x3d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0x9b, 0x06, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x55, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x78, 0x79, 0x7a, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12,
	0x55, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3b, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x12, 0x50, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x78, 0x79, 0x7a, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x53, 0x4e, 0x52, 0x09, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x06,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x76, 0x0a, 0x03, 0x44, 0x53, 0x4e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x49, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x35, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x44, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x64, 0x73, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x1a, 0x39,
	0x0a, 0x05, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x1a, 0x3a, 0x0a, 0x0c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3a, 0x0a, 0x0c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x4a, 0x0a, 0x06, 0x44, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x44,
	0x42, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x42, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x50, 0x4f, 0x53, 0x54, 0x47, 0x52, 0x45, 0x53, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x42,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x10, 0x02, 0x32, 0xe8, 0x03,
	0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x2e, 0x78, 0x79,
	0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x78, 0x79, 0x7a,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x90, 0x02, 0x01, 0x12,
	0x5a, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24,
	0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x2d, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30,
	0x01, 0x12, 0x65, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x75, 0x6e,
	0x6e, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x78,
	0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x42, 0x3e, 0x50, 0x01, 0x5a, 0x3a, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x66,
	0x74, 0x6c, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2f, 0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f,
	0x76, 0x31, 0x3b, 0x66, 0x74, 0x6c, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_xyz_block_ftl_v1_controller_proto_rawDescOnce sync.Once
	file_xyz_block_ftl_v1_controller_proto_rawDescData []byte
)

func file_xyz_block_ftl_v1_controller_proto_rawDescGZIP() []byte {
	file_xyz_block_ftl_v1_controller_proto_rawDescOnce.Do(func() {
		file_xyz_block_ftl_v1_controller_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_xyz_block_ftl_v1_controller_proto_rawDesc), len(file_xyz_block_ftl_v1_controller_proto_rawDesc)))
	})
	return file_xyz_block_ftl_v1_controller_proto_rawDescData
}

var file_xyz_block_ftl_v1_controller_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_xyz_block_ftl_v1_controller_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_xyz_block_ftl_v1_controller_proto_goTypes = []any{
	(GetDeploymentContextResponse_DbType)(0),   // 0: xyz.block.ftl.v1.GetDeploymentContextResponse.DbType
	(*RegisterRunnerRequest)(nil),              // 1: xyz.block.ftl.v1.RegisterRunnerRequest
	(*RegisterRunnerResponse)(nil),             // 2: xyz.block.ftl.v1.RegisterRunnerResponse
	(*StatusRequest)(nil),                      // 3: xyz.block.ftl.v1.StatusRequest
	(*StatusResponse)(nil),                     // 4: xyz.block.ftl.v1.StatusResponse
	(*ProcessListRequest)(nil),                 // 5: xyz.block.ftl.v1.ProcessListRequest
	(*ProcessListResponse)(nil),                // 6: xyz.block.ftl.v1.ProcessListResponse
	(*GetDeploymentContextRequest)(nil),        // 7: xyz.block.ftl.v1.GetDeploymentContextRequest
	(*GetDeploymentContextResponse)(nil),       // 8: xyz.block.ftl.v1.GetDeploymentContextResponse
	(*StatusResponse_Controller)(nil),          // 9: xyz.block.ftl.v1.StatusResponse.Controller
	(*StatusResponse_Runner)(nil),              // 10: xyz.block.ftl.v1.StatusResponse.Runner
	(*StatusResponse_Deployment)(nil),          // 11: xyz.block.ftl.v1.StatusResponse.Deployment
	(*StatusResponse_Route)(nil),               // 12: xyz.block.ftl.v1.StatusResponse.Route
	(*ProcessListResponse_ProcessRunner)(nil),  // 13: xyz.block.ftl.v1.ProcessListResponse.ProcessRunner
	(*ProcessListResponse_Process)(nil),        // 14: xyz.block.ftl.v1.ProcessListResponse.Process
	(*GetDeploymentContextResponse_DSN)(nil),   // 15: xyz.block.ftl.v1.GetDeploymentContextResponse.DSN
	(*GetDeploymentContextResponse_Route)(nil), // 16: xyz.block.ftl.v1.GetDeploymentContextResponse.Route
	nil,                     // 17: xyz.block.ftl.v1.GetDeploymentContextResponse.ConfigsEntry
	nil,                     // 18: xyz.block.ftl.v1.GetDeploymentContextResponse.SecretsEntry
	(*structpb.Struct)(nil), // 19: google.protobuf.Struct
	(*v1.Module)(nil),       // 20: xyz.block.ftl.schema.v1.Module
	(*PingRequest)(nil),     // 21: xyz.block.ftl.v1.PingRequest
	(*PingResponse)(nil),    // 22: xyz.block.ftl.v1.PingResponse
}
var file_xyz_block_ftl_v1_controller_proto_depIdxs = []int32{
	19, // 0: xyz.block.ftl.v1.RegisterRunnerRequest.labels:type_name -> google.protobuf.Struct
	9,  // 1: xyz.block.ftl.v1.StatusResponse.controllers:type_name -> xyz.block.ftl.v1.StatusResponse.Controller
	10, // 2: xyz.block.ftl.v1.StatusResponse.runners:type_name -> xyz.block.ftl.v1.StatusResponse.Runner
	11, // 3: xyz.block.ftl.v1.StatusResponse.deployments:type_name -> xyz.block.ftl.v1.StatusResponse.Deployment
	12, // 4: xyz.block.ftl.v1.StatusResponse.routes:type_name -> xyz.block.ftl.v1.StatusResponse.Route
	14, // 5: xyz.block.ftl.v1.ProcessListResponse.processes:type_name -> xyz.block.ftl.v1.ProcessListResponse.Process
	17, // 6: xyz.block.ftl.v1.GetDeploymentContextResponse.configs:type_name -> xyz.block.ftl.v1.GetDeploymentContextResponse.ConfigsEntry
	18, // 7: xyz.block.ftl.v1.GetDeploymentContextResponse.secrets:type_name -> xyz.block.ftl.v1.GetDeploymentContextResponse.SecretsEntry
	15, // 8: xyz.block.ftl.v1.GetDeploymentContextResponse.databases:type_name -> xyz.block.ftl.v1.GetDeploymentContextResponse.DSN
	16, // 9: xyz.block.ftl.v1.GetDeploymentContextResponse.routes:type_name -> xyz.block.ftl.v1.GetDeploymentContextResponse.Route
	19, // 10: xyz.block.ftl.v1.StatusResponse.Runner.labels:type_name -> google.protobuf.Struct
	19, // 11: xyz.block.ftl.v1.StatusResponse.Deployment.labels:type_name -> google.protobuf.Struct
	20, // 12: xyz.block.ftl.v1.StatusResponse.Deployment.schema:type_name -> xyz.block.ftl.schema.v1.Module
	19, // 13: xyz.block.ftl.v1.ProcessListResponse.ProcessRunner.labels:type_name -> google.protobuf.Struct
	19, // 14: xyz.block.ftl.v1.ProcessListResponse.Process.labels:type_name -> google.protobuf.Struct
	13, // 15: xyz.block.ftl.v1.ProcessListResponse.Process.runner:type_name -> xyz.block.ftl.v1.ProcessListResponse.ProcessRunner
	0,  // 16: xyz.block.ftl.v1.GetDeploymentContextResponse.DSN.type:type_name -> xyz.block.ftl.v1.GetDeploymentContextResponse.DbType
	21, // 17: xyz.block.ftl.v1.ControllerService.Ping:input_type -> xyz.block.ftl.v1.PingRequest
	5,  // 18: xyz.block.ftl.v1.ControllerService.ProcessList:input_type -> xyz.block.ftl.v1.ProcessListRequest
	3,  // 19: xyz.block.ftl.v1.ControllerService.Status:input_type -> xyz.block.ftl.v1.StatusRequest
	7,  // 20: xyz.block.ftl.v1.ControllerService.GetDeploymentContext:input_type -> xyz.block.ftl.v1.GetDeploymentContextRequest
	1,  // 21: xyz.block.ftl.v1.ControllerService.RegisterRunner:input_type -> xyz.block.ftl.v1.RegisterRunnerRequest
	22, // 22: xyz.block.ftl.v1.ControllerService.Ping:output_type -> xyz.block.ftl.v1.PingResponse
	6,  // 23: xyz.block.ftl.v1.ControllerService.ProcessList:output_type -> xyz.block.ftl.v1.ProcessListResponse
	4,  // 24: xyz.block.ftl.v1.ControllerService.Status:output_type -> xyz.block.ftl.v1.StatusResponse
	8,  // 25: xyz.block.ftl.v1.ControllerService.GetDeploymentContext:output_type -> xyz.block.ftl.v1.GetDeploymentContextResponse
	2,  // 26: xyz.block.ftl.v1.ControllerService.RegisterRunner:output_type -> xyz.block.ftl.v1.RegisterRunnerResponse
	22, // [22:27] is the sub-list for method output_type
	17, // [17:22] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_xyz_block_ftl_v1_controller_proto_init() }
func file_xyz_block_ftl_v1_controller_proto_init() {
	if File_xyz_block_ftl_v1_controller_proto != nil {
		return
	}
	file_xyz_block_ftl_v1_ftl_proto_init()
	file_xyz_block_ftl_v1_controller_proto_msgTypes[9].OneofWrappers = []any{}
	file_xyz_block_ftl_v1_controller_proto_msgTypes[13].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_xyz_block_ftl_v1_controller_proto_rawDesc), len(file_xyz_block_ftl_v1_controller_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_xyz_block_ftl_v1_controller_proto_goTypes,
		DependencyIndexes: file_xyz_block_ftl_v1_controller_proto_depIdxs,
		EnumInfos:         file_xyz_block_ftl_v1_controller_proto_enumTypes,
		MessageInfos:      file_xyz_block_ftl_v1_controller_proto_msgTypes,
	}.Build()
	File_xyz_block_ftl_v1_controller_proto = out.File
	file_xyz_block_ftl_v1_controller_proto_goTypes = nil
	file_xyz_block_ftl_v1_controller_proto_depIdxs = nil
}
